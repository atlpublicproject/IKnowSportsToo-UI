{"version":3,"sources":["app.ts","environment.ts","main.ts","objects/cards/cardresponse.ts","objects/cards/card.ts","objects/decks/deck.ts","objects/state/state.ts","objects/decks/deckfactory.ts","objects/decks/deckheader.ts","objects/allobjects.ts","resources/validation/bootstrap-form-renderer.ts","storage/deck-storage.ts","storage/deck-store-api.ts","deck/edit.ts","lib/question-formulator.ts","deck/import.ts","deck/index.ts","game/play.ts","game/review.ts","lib/json-table-parser.ts","lib/json-template-parser.ts","resources/index.ts","resources/value-converters/number.ts","F:/Oct2016/I Know Sports Too/node_modules/aurelia-validation/dist/amd/validate-binding-behavior.js","F:/Oct2016/I Know Sports Too/node_modules/aurelia-validation/dist/amd/validate-trigger.js","F:/Oct2016/I Know Sports Too/node_modules/aurelia-validation/dist/amd/validate-binding-behavior-base.js","F:/Oct2016/I Know Sports Too/node_modules/aurelia-validation/dist/amd/validation-controller.js","F:/Oct2016/I Know Sports Too/node_modules/aurelia-validation/dist/amd/validator.js","F:/Oct2016/I Know Sports Too/node_modules/aurelia-validation/dist/amd/property-info.js","F:/Oct2016/I Know Sports Too/node_modules/aurelia-validation/dist/amd/validation-error.js","F:/Oct2016/I Know Sports Too/node_modules/aurelia-validation/dist/amd/validation-controller-factory.js","F:/Oct2016/I Know Sports Too/node_modules/aurelia-validation/dist/amd/validation-errors-custom-attribute.js","F:/Oct2016/I Know Sports Too/node_modules/aurelia-validation/dist/amd/validation-renderer-custom-attribute.js","F:/Oct2016/I Know Sports Too/node_modules/aurelia-validation/dist/amd/implementation/rules.js","F:/Oct2016/I Know Sports Too/node_modules/aurelia-validation/dist/amd/implementation/standard-validator.js","F:/Oct2016/I Know Sports Too/node_modules/aurelia-validation/dist/amd/implementation/validation-messages.js","F:/Oct2016/I Know Sports Too/node_modules/aurelia-validation/dist/amd/implementation/validation-parser.js","F:/Oct2016/I Know Sports Too/node_modules/aurelia-validation/dist/amd/implementation/util.js","F:/Oct2016/I Know Sports Too/node_modules/aurelia-validation/dist/amd/implementation/validation-rules.js","F:/Oct2016/I Know Sports Too/src/app.html","base/modifiers.scss","F:/Oct2016/I Know Sports Too/src/game/commandstable.html","style/base/modifiers.scss","deck/deck.scss","app.scss","F:/Oct2016/I Know Sports Too/src/game/play.html","F:/Oct2016/I Know Sports Too/src/game/review.html","play.css","F:/Oct2016/I Know Sports Too/src/deck/edit.html","review.css","deck.css","F:/Oct2016/I Know Sports Too/src/deck/import.html","F:/Oct2016/I Know Sports Too/src/deck/index.html"],"names":[],"mappings":";;IAGA;QAAA;QA0BA,CAAC;QAvBA,6BAAe,GAAf,UAAgB,MAA2B,EAAE,MAAc;YACxD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;YACrB,MAAM,CAAC,KAAK,GAAG,SAAS,CAAC;YACzB,MAAM,CAAC,GAAG,CAAC;gBAGT,EAAE,KAAK,EAAE,CAAC,EAAE,EAAE,OAAO,CAAC,EAAE,KAAK,EAAC,YAAY,EAAI,IAAI,EAAE,OAAO,EAAQ,QAAQ,EAAE,YAAY,EAAE,GAAG,EAAC,IAAI,EAAC;gBAMpG,EAAE,KAAK,EAAE,UAAU,EAAU,IAAI,EAAE,MAAM,EAAQ,QAAQ,EAAE,WAAW,EAAE;gBACxE,EAAE,KAAK,EAAE,QAAQ,EAAY,IAAI,EAAE,QAAQ,EAAM,QAAQ,EAAE,aAAa,EAAE;gBAC1E,EAAE,KAAK,EAAE,MAAM,EAAc,IAAI,EAAE,MAAM,EAAQ,QAAQ,EAAE,WAAW,EAAE;gBACxE,EAAE,KAAK,EAAE,QAAQ,EAAY,IAAI,EAAE,QAAQ,EAAQ,QAAQ,EAAE,aAAa,EAAE;aAI7E,CAAC,CAAC;QACP,CAAC;QAGD,UAAC;IAAD,CA1BA,AA0BC,IAAA;IA1BY,WAAG,MA0Bf,CAAA;;;;;IC7BD;sBAAe;QACb,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI;KACd,CAAC;;;;;ICII,OAAQ,CAAC,MAAM,CAAC;QACpB,QAAQ,EAAE;YACR,gBAAgB,EAAE,KAAK;SACxB;KACF,CAAC,CAAC;IAEH,mBAA0B,OAAgB;QACxC,OAAO,CAAC,GAAG;aACR,qBAAqB,EAAE;aACvB,OAAO,CAAC,WAAW,CAAC;aACpB,MAAM,CAAC,gBAAgB,CAAC;aACxB,MAAM,CAAC,oBAAoB,CAAC;aAC5B,MAAM,CAAC,4BAA4B,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,MAAM,EAAE,EAAV,CAAU,CAAC,CAAC;QAMzD,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,qBAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACxC,CAAC;QAED,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,EAAE,EAAjB,CAAiB,CAAC,CAAC;IAChD,CAAC;IArBe,iBAAS,YAqBxB,CAAA;;;;;ICjCD,WAAY,YAAY;QACpB,yDAAa,CAAA;QACb,iDAAS,CAAA;QACT,iDAAS,CAAA;QACT,+CAAQ,CAAA;IACZ,CAAC,EALW,oBAAY,KAAZ,oBAAY,QAKvB;IALD,IAAY,YAAY,GAAZ,oBAKX,CAAA;;;;;ICHD;QAsBI,cAAmB,EAAU,EAAS,QAAiB,EAAS,MAAe;YAA5D,OAAE,GAAF,EAAE,CAAQ;YAAS,aAAQ,GAAR,QAAQ,CAAS;YAAS,WAAM,GAAN,MAAM,CAAS;YAnB/E,cAAS,GAAa,KAAK,CAAC;YAC5B,oBAAe,GAAa,KAAK,CAAC;YAElC,aAAQ,GAAkB,2BAAY,CAAC,SAAS,CAAC;YAEjD,eAAU,GAAY,CAAC,CAAC;YACxB,eAAU,GAAY,CAAC,CAAC;YACxB,cAAS,GAAY,CAAC,CAAC;QAavB,CAAC;QAEM,WAAM,GAAb;YACI,MAAM,CAAC,IAAI,IAAI,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAC,CAAC;QAC9B,CAAC;QAEM,mBAAI,GAAX,UAAa,KAAoB;YAC7B,EAAE,CAAC,CAAE,KAAK,IAAI,IAAI,IAAI,KAAK,IAAI,SAAS,CAAC;gBACrC,MAAM,CAAC;YAEX,MAAM,CAAA,CAAE,KAAM,CAAC,CAAA,CAAC;gBACZ,KAAK,2BAAY,CAAC,SAAS;oBACvB,MAAM,CAAC;gBAEX,KAAK,2BAAY,CAAC,KAAK;oBACnB,IAAI,CAAC,UAAU,EAAE,CAAC;oBACnB,KAAK,CAAC;gBAET,KAAK,2BAAY,CAAC,KAAK;oBACnB,IAAI,CAAC,UAAU,EAAE,CAAC;gBAEtB,KAAK,2BAAY,CAAC,IAAI;oBAClB,IAAI,CAAC,SAAS,EAAE,CAAC;oBAErB,KAAK,CAAC;YACV,CAAC;YAED,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QAC1B,CAAC;QACL,WAAC;IAAD,CApDA,AAoDC,IAAA;IApDY,YAAI,OAoDhB,CAAA;;;;;ICrDD;QAKI,cAAmB,EAAW,EAAS,IAAY,EAAS,WAAoB;YAA7D,OAAE,GAAF,EAAE,CAAS;YAAS,SAAI,GAAJ,IAAI,CAAQ;YAAS,gBAAW,GAAX,WAAW,CAAS;YAC5E,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAChB,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,EAAQ,CAAC;QACnC,CAAC;QAEM,WAAM,GAAb;YACI,MAAM,CAAC,IAAI,IAAI,CAAC,EAAE,EAAC,EAAE,EAAC,EAAE,CAAE,CAAC;QAC/B,CAAC;QAED,sBAAI,2BAAS;iBAAb;gBACI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;YAC7B,CAAC;;;WAAA;QAEM,uBAAQ,GAAf,UAAgB,KAAc;YAE1B,IAAI,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;YAEhC,GAAG,CAAA,CAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC,CAAC;gBACnC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,UAAU,GAAG,CAAC,GAAG,CAAC,CAAC;gBACrC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,KAAK,CAAC,CAAC,CAAC,CAAE,CAAC;YAChC,CAAC;QACL,CAAC;QAEM,sBAAO,GAAd,UAAgB,IAAW;YACvB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;YACjC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,IAAI,CAAE,CAAC;QAC5B,CAAC;QAEM,yBAAU,GAAjB,UAAmB,IAAW;YAC1B,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,GAAC,CAAC,EAAG,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,aAAa,EAAE,CAAC;QACzB,CAAC;QAED,4BAAa,GAAb;YACI,GAAG,CAAA,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE;gBACrC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;QACrC,CAAC;QAED,uBAAQ,GAAR;YACI,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YAC9B,EAAE,CAAC,CAAE,IAAI,CAAC,MAAM,GAAG,CAAE,CAAC;gBAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;YACvC,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC;QACpD,CAAC;QAED,mBAAI,GAAJ;YACI,IAAI,CAAC,MAAM,GAAG,CAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAE,CAAC;YAClC,EAAE,CAAC,CAAE,IAAI,CAAC,MAAM,IAAK,IAAI,CAAC,SAAU,CAAC;gBAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;YACvE,MAAM,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,MAAM,CAAE,CAAC;QACpD,CAAC;QAKD,sBAAO,GAAP;YAEI,kBAAkB,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC,CAAC;gBACrB,CAAC,GAAC,CAAC,CAAC,MAAM,CAAC;gBAAA,OAAM,CAAC;oBAAC,CAAC,GAAC,IAAI,CAAC,MAAM,EAAE,GAAC,CAAC,EAAE,CAAC,GAAC,CAAC,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,GAAC,CAAC,CAAA;YACxE,CAAC;YAED,QAAQ,CAAE,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QAC5C,CAAC;QAEL,WAAC;IAAD,CAnEA,AAmEC,IAAA;IAnEY,YAAI,OAmEhB,CAAA;;;;;ICnED;QAOI;YACI,IAAI,CAAC,KAAK,GAAG,EAAG,CAAC;QACrB,CAAC;QACL,YAAC;IAAD,CAVA,AAUC,IAAA;IAVY,aAAK,QAUjB,CAAA;;;;;ICRD;QAAA;QAeA,CAAC;QAbG,sCAAgB,GAAhB;YAEI,IAAI,IAAI,GAAG,IAAI,WAAI,CAAC,IAAI,EAAE,gBAAgB,EAAE,2CAA2C,CAAC,CAAC;YAEzF,IAAI,KAAK,GAAG,IAAI,KAAK,EAAQ,CAAC;YAC9B,KAAK,CAAC,IAAI,CAAE,IAAI,WAAI,CAAC,IAAI,EAAC,qCAAqC,EAAE,wBAAwB,CAAC,CAAE,CAAC;YAC7F,KAAK,CAAC,IAAI,CAAE,IAAI,WAAI,CAAC,IAAI,EAAC,8CAA8C,EAAE,8DAA8D,CAAC,CAAE,CAAC;YAC5I,KAAK,CAAC,IAAI,CAAE,IAAI,WAAI,CAAC,IAAI,EAAC,kCAAkC,EAAE,kCAAkC,CAAC,CAAE,CAAC;YAEpG,IAAI,CAAC,QAAQ,CAAE,KAAK,CAAE,CAAC;YAEvB,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QACL,kBAAC;IAAD,CAfA,AAeC,IAAA;IAfY,mBAAW,cAevB,CAAA;;;;;ICnBD;QAAA;QAOA,CAAC;QAAD,iBAAC;IAAD,CAPA,AAOC,IAAA;IAPY,kBAAU,aAOtB,CAAA;;;;;ICNO,8BAA4B;IAG5B,2BAA0B;IAC1B,mDAA0C;IAG1C,2BAA0B;IAC1B,gDAAwC;IACxC,6CAAsC;;;;;ICJ9C;QAAA;QAiDA,CAAC;QAhDC,sCAAM,GAAN,UAAO,WAAW;YAChB,GAAG,CAAC,CAA4B,UAAoB,EAApB,KAAA,WAAW,CAAC,QAAQ,EAApB,cAAoB,EAApB,IAAoB,CAAC;gBAAhD,eAAuB,EAAjB,gBAAK,EAAE,sBAAQ;gBACxB,GAAG,CAAC,CAAgB,UAAQ,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ,CAAC;oBAAxB,IAAI,SAAO,iBAAA;oBACd,IAAI,CAAC,MAAM,CAAC,SAAO,EAAE,KAAK,CAAC,CAAC;iBAC7B;aACF;YAED,GAAG,CAAC,CAA4B,UAAkB,EAAlB,KAAA,WAAW,CAAC,MAAM,EAAlB,cAAkB,EAAlB,IAAkB,CAAC;gBAA9C,eAAuB,EAAjB,gBAAK,EAAE,sBAAQ;gBACxB,GAAG,CAAC,CAAgB,UAAQ,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ,CAAC;oBAAxB,IAAI,SAAO,iBAAA;oBACd,IAAI,CAAC,GAAG,CAAC,SAAO,EAAE,KAAK,CAAC,CAAC;iBAC1B;aACF;QACH,CAAC;QAED,mCAAG,GAAH,UAAI,OAAO,EAAE,KAAK;YAChB,IAAM,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;YACjD,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBACf,MAAM,CAAC;YACT,CAAC;YAGD,SAAS,CAAC,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YAGrC,IAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;YAC/C,OAAO,CAAC,SAAS,GAAG,+BAA+B,CAAC;YACpD,OAAO,CAAC,WAAW,GAAG,KAAK,CAAC,OAAO,CAAC;YACpC,OAAO,CAAC,EAAE,GAAG,wBAAsB,KAAK,CAAC,EAAI,CAAC;YAC9C,SAAS,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QACjC,CAAC;QAED,sCAAM,GAAN,UAAO,OAAO,EAAE,KAAK;YACnB,IAAM,SAAS,GAAG,OAAO,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;YACjD,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;gBACf,MAAM,CAAC;YACT,CAAC;YAGD,IAAM,OAAO,GAAG,SAAS,CAAC,aAAa,CAAC,yBAAuB,KAAK,CAAC,EAAI,CAAC,CAAC;YAC3E,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBACZ,SAAS,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;gBAG/B,EAAE,CAAC,CAAC,SAAS,CAAC,gBAAgB,CAAC,gCAAgC,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;oBAC9E,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;gBAC1C,CAAC;YACH,CAAC;QACH,CAAC;QACH,4BAAC;IAAD,CAjDA,AAiDC,IAAA;IAjDY,6BAAqB,wBAiDjC,CAAA;;;ACtDD,IAAI,EAAE,GAAG,CAAC,CAAC;AAEX;IACE,MAAM,CAAC,EAAE,EAAE,CAAC;AACd,CAAC;AAGD,IAAI,MAAM,GAAG;IACT,IAAI,KAAK,GAAG,GAAG,CAAC;IAChB;QACI,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC3E,CAAC;IACD,MAAM,CAAC,CAAC,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,KAAK,GAAG,EAAE,EAAE,GAAG,KAAK,GAAG,EAAE,EAAE,GAAG,KAAK,GAAG,EAAE,EAAE,GAAG,KAAK,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE,CAAC,CAAC;AACnG,CAAC,CAAC;AAGF;IACE,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC;AAC5C,CAAC;AAGD;IACE,MAAM,CAAC;QACJ,EAAE,EAAG,MAAM,EAAE;QACb,QAAQ,EAAG,0BAA0B;QACrC,MAAM,EAAG,mBAAmB;KAC9B,CAAC;AACJ,CAAC;AAGD,IAAI,WAAW,GAAG,EAAE,CAAC;AACrB,IAAI,KAAK,GAAG,EAAE,CAAC;AACf,SAAS,EAAE,CAAC;AAEZ;IACI,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;IACrD,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;AACrE,CAAC;AAED;IACI,IAAI,WAAW,GAAG,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA;IAC/C,IAAI,kBAAkB,GAAG,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAA;IAE5D,EAAE,CAAC,CAAE,WAAW,KAAK,IAAK,CAAC,CAAA,CAAC;QACxB,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC;IACpC,CAAC;IAAC,IAAI,CAAC,CAAC;QACJ,KAAK,GAAG;YACJ;gBACI,EAAE,EAAG,MAAM,EAAE;gBACb,IAAI,EAAC,gBAAgB;gBACrB,WAAW,EAAE,2CAA2C;gBACxD,KAAK,EACD;oBACI;wBACI,EAAE,EAAC,KAAK,EAAE;wBACV,QAAQ,EAAG,qCAAqC;wBAChD,MAAM,EAAG,wBAAwB;wBACjC,MAAM,EAAG,CAAC;qBACb;oBACD;wBACI,EAAE,EAAC,KAAK,EAAE;wBACV,QAAQ,EAAG,8CAA8C;wBACzD,MAAM,EAAG,8DAA8D;wBACvE,MAAM,EAAG,CAAC;qBACb;oBACD;wBACI,EAAE,EAAC,KAAK,EAAE;wBACV,QAAQ,EAAG,kCAAkC;wBAC7C,MAAM,EAAG,kCAAkC;wBAC3C,MAAM,EAAG,CAAC;qBACb;iBACJ;aACR;YAED;gBACI,EAAE,EAAG,MAAM,EAAE;gBACb,IAAI,EAAC,gBAAgB;gBACrB,WAAW,EAAE,2CAA2C;gBACxD,KAAK,EACD;oBACI;wBACI,EAAE,EAAC,KAAK,EAAE;wBACV,QAAQ,EAAG,wCAAwC;wBACnD,MAAM,EAAG,cAAc;wBACvB,MAAM,EAAG,CAAC;qBACb;oBACD;wBACI,EAAE,EAAC,KAAK,EAAE;wBACV,QAAQ,EAAG,4BAA4B;wBACvC,MAAM,EAAG,mBAAmB;wBAC5B,MAAM,EAAG,CAAC;qBACb;oBACD;wBACI,EAAE,EAAC,KAAK,EAAE;wBACV,QAAQ,EAAG,gCAAgC;wBAC3C,MAAM,EAAG,cAAc;wBACvB,MAAM,EAAG,CAAC;qBACb;iBACJ;aACR;SACJ,CAAC;IACN,CAAC;IAED,EAAE,CAAC,CAAE,kBAAkB,KAAK,IAAK,CAAC,CAAA,CAAC;QAC/B,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;IACjD,CAAC;IAAC,IAAI,CAAC,CAAC;QAGJ,WAAW,GAAG;YACd;gBACI,EAAE,EAAG,MAAM,EAAE;gBACb,IAAI,EAAG,uBAAuB;gBAC9B,WAAW,EAAG,qDAAqD;gBACnE,SAAS,EAAG,YAAY,EAAE;aAC7B;YACD;gBACI,EAAE,EAAG,MAAM,EAAE;gBACb,IAAI,EAAG,mBAAmB;gBAC1B,WAAW,EAAG,2CAA2C;gBACzD,SAAS,EAAG,YAAY,EAAE;aAC7B;YACD;gBACI,EAAE,EAAG,MAAM,EAAE;gBACb,IAAI,EAAG,oBAAoB;gBAC3B,WAAW,EAAG,mCAAmC;gBACjD,SAAS,EAAG,YAAY,EAAE;aAC7B;YACD;gBACI,EAAE,EAAG,MAAM,EAAE;gBACb,IAAI,EAAG,mBAAmB;gBAC1B,WAAW,EAAG,2EAA2E;gBACzF,SAAS,EAAG,YAAY,EAAE;aAC7B;YACD;gBACI,EAAE,EAAG,MAAM,EAAE;gBACb,IAAI,EAAG,kBAAkB;gBACzB,WAAW,EAAG,4CAA4C;gBAC1D,SAAS,EAAG,YAAY,EAAE;aAC7B;YACD;gBACI,EAAE,EAAG,MAAM,EAAE;gBACb,IAAI,EAAG,+BAA+B;gBACtC,WAAW,EAAG,qCAAqC;gBACnD,SAAS,EAAG,YAAY,EAAE;aAC7B;YACD;gBACI,EAAE,EAAG,MAAM,EAAE;gBACb,IAAI,EAAG,6CAA6C;gBACpD,WAAW,EAAG,+BAA+B;gBAC7C,SAAS,EAAG,YAAY,EAAE;aAC7B;SACA,CAAC;IACN,CAAC;IAED,SAAS,EAAE,CAAC;AAChB,CAAC;;;;;;ICxJD,IAAI,OAAO,GAAG,GAAG,CAAC;IAClB,IAAI,EAAE,GAAG,CAAC,CAAC;IAIX;QAAA;YACE,iBAAY,GAAG,KAAK,CAAC;QAuKvB,CAAC;QApKC,6BAAM,GAAN,UAAQ,UAAmB;YAA3B,iBAuBC;YAtBC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,MAAM,CAAC,IAAI,OAAO,CAAC,UAAA,OAAO;gBACxB,UAAU,CAAC;oBACT,IAAI,OAAO,GAAG,WAAW,CAAC;oBAE1B,EAAE,CAAC,CAAE,CAAC,CAAC,UAAU,CAAC,CAAA,CAAC;wBACjB,IAAI,iBAAe,GAAG,UAAU,CAAC,WAAW,EAAE,CAAC;wBAC/C,OAAO,GAAG,OAAO;6BACZ,MAAM,CAAE,UAAA,CAAC;4BAAM,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAE,iBAAe,CAAE,GAAG,CAAC,CAAC;mCACpD,CAAC,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,OAAO,CAAE,iBAAe,CAAE,GAAG,CAAC,CAAC,CAAA;wBAAC,CAAC,CAAC,CAAC;oBAC5F,CAAC;oBAED,OAAO,CAAC,GAAG,CAAC,UAAA,CAAC;wBAAO,MAAM,CAAa;4BACrC,EAAE,EAAC,CAAC,CAAC,EAAE;4BACP,IAAI,EAAG,CAAC,CAAC,IAAI;4BACb,WAAW,EAAI,CAAC,CAAC,WAAW;4BAC5B,SAAS,EAAG,CAAC,CAAC,SAAS;yBACxB,CAAA;oBAAA,CAAC,CAAC,CAAC;oBACJ,OAAO,CAAC,OAAO,CAAC,CAAC;oBACjB,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC5B,CAAC,EAAE,OAAO,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;QACL,CAAC;QAGD,kCAAW,GAAX,UAAa,UAAmB;YAAhC,iBAyBC;YAxBC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,MAAM,CAAC,IAAI,OAAO,CAAC,UAAA,OAAO;gBACxB,UAAU,CAAC;oBACT,IAAI,OAAO,GAAG,KAAK,CAAC;oBAGpB,EAAE,CAAC,CAAE,CAAC,CAAC,UAAU,CAAC,CAAA,CAAC;wBACjB,IAAI,iBAAe,GAAG,UAAU,CAAC,WAAW,EAAE,CAAC;wBAC/C,OAAO,GAAG,OAAO;6BACZ,MAAM,CAAE,UAAA,CAAC;4BAAM,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,OAAO,CAAE,iBAAe,CAAE,GAAG,CAAC,CAAC;mCACpD,CAAC,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC,OAAO,CAAE,iBAAe,CAAE,GAAG,CAAC,CAAC,CAAA;wBAAC,CAAC,CAAC,CAAC;oBAC5F,CAAC;oBAED,OAAO,GAAG,OAAO;yBAChB,GAAG,CAAC,UAAA,CAAC;wBAAO,MAAM,CAAa;4BAC9B,EAAE,EAAC,CAAC,CAAC,EAAE;4BACP,IAAI,EAAG,CAAC,CAAC,IAAI;4BACb,WAAW,EAAI,CAAC,CAAC,WAAW;4BAC5B,SAAS,EAAG,CAAC,CAAC,KAAK,CAAC,MAAM;yBAC3B,CAAA;oBAAA,CAAC,CAAC,CAAC;oBACJ,OAAO,CAAC,OAAO,CAAC,CAAC;oBACjB,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC5B,CAAC,EAAE,OAAO,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;QACL,CAAC;QAGD,mCAAY,GAAZ,UAAa,EAAW;YAAxB,iBAqBC;YApBC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,MAAM,CAAC,IAAI,OAAO,CAAC,UAAA,OAAO;gBACxB,UAAU,CAAC;oBAGT,IAAI,IAAI,GAAI,KAAK,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,EAAE,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC7C,IAAI,KAAK,GAAG,MAAM,CAAC,MAAM,CAAE,iBAAI,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBAG5E,IAAI,KAAK,GAAG,IAAI,KAAK,EAAQ,CAAC;oBAC9B,GAAG,CAAA,CAAE,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,EAAE,EAAE,CAAC;wBAC9C,KAAK,CAAC,IAAI,CAAE,MAAM,CAAC,MAAM,CAAE,iBAAI,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAE,CAAC,CAAC;oBAC9D,CAAC;oBACD,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC;oBAEpB,OAAO,CAAE,KAAK,CAAE,CAAC;oBACjB,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAE5B,CAAC,EAAE,OAAO,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;QACL,CAAC;QAGD,8BAAO,GAAP,UAAQ,EAAW;YAAnB,iBAgBC;YAfC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,MAAM,CAAC,IAAI,OAAO,CAAC,UAAA,OAAO;gBACxB,UAAU,CAAC;oBACT,IAAI,KAAK,GAAG,WAAW,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,EAAE,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC,CAAC,CAAC,CAAC;oBAEnD,IAAI,IAAI,GAAG,IAAI,iBAAI,CAAE,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,IAAI,EAAE,KAAK,CAAC,WAAW,CAAC,CAAC;oBAC9D,GAAG,CAAA,CAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,SAAS,EAAE,CAAC,EAAE,EAAC,CAAC;wBACxC,IAAI,EAAE,GAAG,WAAW,EAAE,CAAC;wBACvB,IAAI,CAAC,OAAO,CAAE,IAAI,iBAAI,CAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,QAAQ,EAAE,EAAE,CAAC,MAAM,CAAE,CAAE,CAAC;oBAC5D,CAAC;oBAED,OAAO,CAAE,IAAI,CAAE,CAAC;oBAChB,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;gBAC5B,CAAC,EAAE,OAAO,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;QACL,CAAC;QAGD,+BAAQ,GAAR,UAAS,IAAW;YAApB,iBAwCC;YAvCC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,MAAM,CAAC,IAAI,OAAO,CAAC,UAAA,OAAO;gBACxB,UAAU,CAAC;oBACT,IAAI,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;oBAGhD,IAAI,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,EAAf,CAAe,CAAC,CAAC,CAAC,CAAC,CAAC;oBAElD,EAAE,CAAA,CAAC,KAAK,CAAC,CAAA,CAAC;wBACR,IAAI,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;wBACjC,KAAK,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC;oBAC1B,CAAC;oBAAA,IAAI,CAAA,CAAC;wBACJ,QAAQ,CAAC,EAAE,GAAG,MAAM,EAAE,CAAC;wBACvB,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;oBACvB,CAAC;oBACD,SAAS,EAAE,CAAC;oBAGZ,IAAI,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,EAAf,CAAe,CAAC,CAAC,CAAC,CAAC,CAAC;oBACzD,EAAE,CAAA,CAAC,MAAM,CAAC,CAAA,CAAC;wBACT,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;wBAC5B,MAAM,CAAC,UAAU,GAAG,QAAQ,CAAC,WAAW,CAAC;wBACzC,MAAM,CAAC,SAAS,GAAG,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;oBAC3C,CAAC;oBAAA,IAAI,CAAA,CAAC;wBACJ,IAAI,UAAU,GAAG;4BACf,EAAE,EAAG,MAAM,EAAE;4BACb,IAAI,EAAG,QAAQ,CAAC,IAAI;4BACpB,WAAW,EAAG,QAAQ,CAAC,WAAW;4BAClC,SAAS,EAAG,QAAQ,CAAC,KAAK,CAAC,MAAM;yBAClC,CAAC;wBACF,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBAC/B,CAAC;oBAED,SAAS,EAAE,CAAC;oBACZ,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;oBAE1B,OAAO,CAAC,QAAQ,CAAC,CAAC;gBACpB,CAAC,EAAE,OAAO,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;QACL,CAAC;QAGD,iCAAU,GAAV,UAAW,IAAW;YAAtB,iBAqBC;YApBC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;YACzB,MAAM,CAAC,IAAI,OAAO,CAAC,UAAA,OAAO;gBACxB,UAAU,CAAC;oBAGT,IAAI,KAAK,GAAG,CAAC,CAAC,SAAS,CAAC,KAAK,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,EAAf,CAAe,CAAE,CAAA;oBACrD,KAAK,CAAC,MAAM,CAAE,KAAK,EAAE,CAAC,CAAC,CAAC;oBAGxB,IAAI,MAAM,GAAG,CAAC,CAAC,SAAS,CAAC,WAAW,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,CAAC,EAAE,IAAI,IAAI,CAAC,EAAE,EAAf,CAAe,CAAE,CAAC;oBAC7D,EAAE,CAAA,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA,CAAC;wBACb,WAAW,CAAC,MAAM,CAAC,MAAM,EAAC,CAAC,CAAC,CAAC;oBAC/B,CAAC;oBAED,SAAS,EAAE,CAAC;oBACZ,KAAI,CAAC,YAAY,GAAG,KAAK,CAAC;oBAE1B,OAAO,EAAE,CAAC;gBACZ,CAAC,EAAE,OAAO,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;QACL,CAAC;QAGH,mBAAC;IAAD,CAxKA,AAwKC,IAAA;IAxKY,oBAAY,eAwKxB,CAAA;;;;;;;;;;;;;;IClKD;QAQE,cAAoB,KAAY,EACZ,MAAc,EACd,2BAAyD,EACzD,KAAoB;YAHpB,UAAK,GAAL,KAAK,CAAO;YACZ,WAAM,GAAN,MAAM,CAAQ;YACd,gCAA2B,GAA3B,2BAA2B,CAA8B;YACzD,UAAK,GAAL,KAAK,CAAe;YA6CxC,eAAU,GAAS,IAAI,CAAC;YA1CtB,EAAE,CAAC,CAAE,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,CAAA,CAAC;gBACvB,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;YACvC,CAAC;YAED,IAAI,CAAC,IAAI,GAAI,KAAK,CAAC,IAAI,CAAC;YACxB,IAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC;QAGD,uBAAQ,GAAR;YACE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAE,IAAI,CAAC,IAAI,CAAE,CAAC;YAEjC,KAAK,CAAC,YAAY,CAAC,CAAC;QACtB,CAAC;QAGD,wBAAS,GAAT;YACE,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;QAC7B,CAAC;QAED,0BAAW,GAAX;YAAA,iBAgBC;YAfC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;iBACvC,IAAI,CACH,UAAC,GAAG;gBACF,EAAE,CAAC,CAAE,GAAG,CAAC,MAAM,IAAI,CAAE,CAAC,CAAA,CAAC;oBACrB,IAAI,IAAI,GAAG,IAAI,iBAAI,CAAE,IAAI,EAAE,KAAI,CAAC,YAAY,EAAE,KAAI,CAAC,UAAU,CAAC,CAAC;oBAC/D,KAAI,CAAC,IAAI,CAAC,OAAO,CAAE,IAAI,CAAE,CAAC;oBAE1B,KAAK,CAAC,YAAY,CAAC,CAAC;oBAEpB,KAAI,CAAC,YAAY;wBACf,KAAI,CAAC,UAAU,GAAI,EAAE,CAAC;gBAG1B,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;QAED,qBAAM,GAAN,UAAO,IAAI;YACT,IAAI,CAAC,IAAI,CAAC,UAAU,CAAE,IAAI,CAAE,CAAC;QAC/B,CAAC;QAGD,8BAAe,GAAf;YACK,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,2BAA2B,CAAC,qBAAqB,EAAE,CAAC;YAC3E,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,+CAAqB,EAAE,CAAC,CAAC;YAGxD,IAAM,KAAK,GAAG,oCAAe;iBAClB,MAAM,CAAC,cAAc,CAAC;iBACtB,WAAW,CAAC,UAAU,CAAC;iBACnB,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE;iBAE1C,MAAM,CAAC,YAAY,CAAC;iBACpB,WAAW,CAAC,QAAQ,CAAC;iBACjB,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE;iBACtC,KAAK,CAAC;YAErB,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAE7C,CAAC;QA3EH;YAAC,0BAAM,CAAC,kBAAK,EAAE,uBAAM,EAAE,gDAA2B,EAAE,6BAAY,CAAC;;gBAAA;QA6EjE,WAAC;IAAD,CA5EA,AA4EC,IAAA;IA5EY,YAAI,OA4EhB,CAAA;;;;;ICzFD;QAAA;QAGA,CAAC;QAAD,gBAAC;IAAD,CAHA,AAGC,IAAA;IAHY,iBAAS,YAGrB,CAAA;IAED;QAAA;QAqBA,CAAC;QAjBU,eAAM,GAAb,UAAe,OAAc,EAAE,OAAc;YAEzC,IAAI,GAAG,GAAG,IAAI,QAAQ,EAAE,CAAC;YAEzB,EAAE,CAAC,CAAE,OAAM,CAAC,OAAO,CAAC,IAAI,WAAW,CAAC,CAAA,CAAC;gBAClC,GAAG,CAAC,QAAQ,GAAG,IAAI,KAAK,EAAa,CAAC;gBACtC,GAAG,CAAC,QAAQ,CAAC,IAAI,CAAE,OAAO,CAAE,CAAC;YAChC,CAAC;YAED,EAAE,CAAC,CAAE,OAAM,CAAC,OAAO,CAAC,IAAI,OAAO,IAAI,OAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,WAAW,CAAC,CAAA,CAAC;gBAClE,GAAG,CAAC,QAAQ,GAAG,OAAO,CAAC;YAC3B,CAAC;YAED,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC;YAEtB,MAAM,CAAC,GAAG,CAAC;QACf,CAAC;QACL,eAAC;IAAD,CArBA,AAqBC,IAAA;IArBY,gBAAQ,WAqBpB,CAAA;IAED;QAAA;QA6BA,CAAC;QA1BU,cAAO,GAAd,UAAgB,OAAa,EAAE,OAAiB;YAC5C,IAAI,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;YACvB,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC;YACnB,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC;YACtB,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC;YACnB,MAAM,CAAC,GAAG,CAAC;QACf,CAAC;QAEM,WAAI,GAAX,UAAa,OAAa,EAAE,OAAiB;YACzC,IAAI,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;YACvB,GAAG,CAAC,OAAO,GAAG,IAAI,CAAC;YACnB,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC;YACtB,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC;YACtB,MAAM,CAAC,GAAG,CAAC;QACf,CAAC;QAEM,WAAI,GAAX,UAAa,OAAgB;YACzB,IAAI,GAAG,GAAG,IAAI,MAAM,EAAE,CAAC;YACvB,GAAG,CAAC,OAAO,GAAG,KAAK,CAAC;YACpB,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC;YACtB,MAAM,CAAC,GAAG,CAAC;QACf,CAAC;QAKL,aAAC;IAAD,CA7BA,AA6BC,IAAA;IA7BY,cAAM,SA6BlB,CAAA;IAGD;QAII,eAAa,CAAU,EAAE,CAAS;YAC9B,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;YACX,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;QACf,CAAC;QACL,YAAC;IAAD,CARA,AAQC,IAAA;IARY,aAAK,QAQjB,CAAA;IAED;QAAA;QAkNA,CAAC;QAhNU,iDAAa,GAApB,UAAsB,IAAY,EAAE,QAAc,EAAE,OAAa;YAM7D,IAAI,OAAO,GAAG,IAAI,KAAK,EAAS,CAAC;YACjC,IAAI,QAAQ,GAAG,IAAI,KAAK,EAAa,CAAC;YAGtC,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAW,CAAC;YAG7B,IAAI,CAAC,GAAG,QAAQ,CAAC,CAAW,CAAE;YAI9B,EAAE,CAAC,CAAE,OAAO,IAAI,OAAO,CAAC,KAAM,CAAC,CAAA,CAAC;gBAE5B,IAAI,SAAS,GAAG,CAAC,CAAC;gBAClB,IAAI,MAAM,GAAG,IAAI,KAAK,EAAiB,CAAC;gBACxC,EAAE,CAAC,CAAE,OAAM,CAAC,OAAO,CAAC,KAAK,CAAC,IAAK,QAAS,CAAC,CAAA,CAAC;oBACtC,MAAM,GAAG,yBAAyB,CAAC,mBAAmB,CAAE,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;gBACxF,CAAC;gBACD,EAAE,CAAC,CAAE,OAAO,CAAC,KAAK,YAAY,MAAO,CAAC,CAAA,CAAC;oBACnC,MAAM,GAAG,OAAO,CAAC,KAAK,CAAC;gBAC3B,CAAC;gBAGD,IAAI,WAAW,GAAG,EAAE,CAAC;gBACrB;oBAEI,IAAI,YAAY,GAAG,EAAE,CAAC;oBACtB,GAAG,CAAC,CAAE,IAAI,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAA,CAAC;wBACvB,YAAY,CAAE,IAAI,CAAE,GAAG,yBAAyB,CAAC,SAAS,CAClD,CAAC,CAAC,KAAK,CAAE,IAAI,CAAC,MAAM,CAAE,UAAC,EAAE,EAAE,EAAE;4BACzB,MAAM,CAAC,CAAC,CAAC,QAAQ,CAAE,OAAO,EAAE,EAAE,CAAE,CAAC;wBACrC,CAAC,CAAE,EAAE,IAAI,CAAC,CAAE,CAAC;oBACzB,CAAC;oBACD,WAAW,CAAC,IAAI,CAAE,YAAY,CAAC,CAAC;;gBATpC,GAAG,CAAA,CAAiB,UAAM,EAAN,iBAAM,EAAN,oBAAM,EAAN,IAAO,CAAC;oBAAvB,IAAI,OAAO,eAAA;;iBAUf;gBAED,IAAI,GAAG,WAAW,CAAC;YACvB,CAAC;YAED,GAAG,CAAA,CAAa,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAK,CAAC;gBAAjB,IAAI,GAAG,aAAA;gBAGR,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAE,GAAG,EAAE,CAAC,CAAE,CAAC;gBAGxC,IAAI,KAAK,GAAG,IAAI,CAAC,YAAY,CAAE,GAAG,EAAE,CAAC,CAAE,CAAC;gBAExC,EAAE,CAAC,CAAE,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC,CAAA,CAAC;oBACjC,OAAO,CAAC,IAAI,CAAE,IAAI,KAAK,CAAE,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,OAAO,CAAE,CAAC,CAAC;gBAC7D,CAAC;gBAED,EAAE,CAAC,CAAE,KAAK,CAAC,OAAQ,CAAC;oBAChB,QAAQ,CAAC,IAAI,CAAE,IAAI,SAAS,EAAE,CAAC,CAAA;aACtC;YAED,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAE,OAAO,EAAE,QAAQ,CAAE,CAAC;QAChD,CAAC;QAGM,+CAAW,GAAlB,UAAoB,IAAY,EAAE,QAAc,EAAE,OAAc;YAE5D,IAAI,OAAO,GAAG,CAAC,OAAO,IAAI,OAAO,CAAC,KAAK,CAAC,CAAC;YAGzC,IAAI,OAAO,GAAG,IAAI,KAAK,EAAS,CAAC;YACjC,IAAI,QAAQ,GAAG,IAAI,KAAK,EAAa,CAAC;YAGtC,EAAE,CAAC,CAAE,CAAC,OAAQ,CAAC,CAAA,CAAC;gBACZ,MAAM,CAAC,IAAI,CAAC,aAAa,CAAE,IAAI,EAAE,QAAQ,EAAE,OAAO,CAAE,CAAC;YACzD,CAAC;YAID,IAAI,SAAS,GAAG,CAAC,CAAC,OAAO,CAAE,IAAI,CAAC,CAAC,CAAC,CAAE,CAAC;YAIrC,IAAI,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC;YACjC,IAAI,OAAO,GAAG,CAAC,CAAC,GAAG,CAAE,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,UAAA,GAAG,IAAI,OAAA,GAAG,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,QAAQ,EAAE,CAAC,MAAM,GAAC,CAAC,CAAC,EAA3D,CAA2D,CAAE,CAAC;YAKxG,IAAI,MAAM,GACN,CAAC,CAAC,OAAO,CACL,IAAI,EACJ,UAAS,GAAG;gBACR,MAAM,CAAE,CAAC,CAAC,MAAM,CACZ,OAAO,EACP,UAAS,IAAI,EAAE,EAAE;oBACb,IAAI,IAAI,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAA;oBACxB,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;gBAAC,CAAC,EACpC,EAAE,CACL,CAAC;YACN,CAAC,CACJ,CAAC;YAEN,IAAI,UAAU,GAAG,EAAE,CAAC;YAIpB,GAAG,CAAA,CAAE,IAAI,SAAS,IAAI,MAAM,CAAC,CAAA,CAAC;gBAG1B,IAAI,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;gBAC9B,IAAI,WAAW,GAAG,EAAE,CAAC;gBAGrB,GAAG,CAAC,CAAc,UAAS,EAAT,uBAAS,EAAT,uBAAS,EAAT,IAAS,CAAC;oBAAtB,IAAI,IAAI,kBAAA;oBACV,EAAE,CAAC,CAAE,CAAC,CAAC,QAAQ,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAA,CAAC;wBAC5B,WAAW,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;oBACvC,CAAC;oBAAA,IAAI,CAAA,CAAC;wBACF,WAAW,CAAC,IAAI,CAAC,GAAG,yBAAyB,CAAC,SAAS,CAAE,CAAC,CAAC,KAAK,CAAE,KAAK,EAAE,IAAI,CAAC,CAAC,IAAI,EAAE,CAAE,CAAC;oBAC5F,CAAC;iBACJ;gBAED,UAAU,CAAC,IAAI,CAAE,WAAW,CAAE,CAAC;YACnC,CAAC;YAED,MAAM,CAAC,IAAI,CAAC,aAAa,CAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,CAAC,CAAC;QAE9D,CAAC;QASD,gDAAY,GAAZ,UAAc,OAAY,EAAE,QAAgB;YAExC,IAAI,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;YAG7C,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,IAAI,CAAC,CAAC;gBACpB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,yCAAyC,EAAE,QAAQ,CAAC,CAAC;YAG5E,GAAG,CAAA,CAAe,UAAO,EAAP,mBAAO,EAAP,qBAAO,EAAP,IAAQ,CAAC;gBAAtB,IAAI,KAAK,gBAAA;gBACV,IAAI,UAAU,GAAG,KAAK,CAAC,SAAS,CAAC,CAAC,EAAC,KAAK,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC;gBACnD,EAAE,CAAC,CAAE,CAAC,OAAO,CAAC,UAAU,CAAE,CAAC,CAAA,CAAC;oBACxB,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,4BAA4B,GAAG,KAAK,GAAG,wCAAwC,CAAC,CAAC;gBACxG,CAAC;gBAED,QAAQ,GAAG,QAAQ,CAAC,OAAO,CAAE,KAAK,EAAE,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;aAC5D;YAED,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACpC,CAAC;QAGM,mCAAS,GAAhB,UAAkB,MAAsB;YACpC,IAAI,SAAS,GAAG,EAAE,CAAC;YAEnB,EAAE,CAAC,CAAE,MAAM,CAAC,MAAM,IAAI,CAAC,CAAC;gBACpB,MAAM,CAAC,EAAE,CAAC;YAEd,EAAE,CAAC,CAAE,MAAM,CAAC,MAAM,IAAI,CAAC,CAAC;gBACpB,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;YAErB,GAAG,CAAA,CAAE,IAAI,EAAE,GAAG,CAAC,EAAE,EAAE,GAAG,MAAM,CAAC,MAAM,EAAE,EAAE,EAAE,EAAC,CAAC;gBACvC,EAAE,CAAC,CAAE,EAAE,IAAI,CAAE,CAAC;oBACV,SAAS,IAAI,MAAM,CAAC,EAAE,CAAC,CAAA;gBAC3B,IAAI,CAAC,EAAE,CAAC,CAAE,EAAE,IAAI,MAAM,CAAC,MAAM,GAAE,CAAE,CAAC;oBAC9B,SAAS,IAAI,OAAO,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;gBACtC,IAAI;oBACA,SAAS,IAAI,IAAI,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;YACvC,CAAC;YAED,MAAM,CAAC,SAAS,CAAC;QACrB,CAAC;QAIM,6CAAmB,GAA1B,UAA4B,aAAsB,EAAE,SAAkB;YAElE,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,SAAS,CAAC,IAAI,CAAC,CAAE;YAE5D,IAAI,eAAe,GAAG,IAAI,KAAK,EAAiB,CAAC;YACjD,IAAI,UAAU,GAAG,IAAI,KAAK,EAAiB,CAAC;YAE5C,GAAG,CAAA,CAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE;gBAC9B,eAAe,CAAC,CAAC,CAAC,GAAG,IAAI,KAAK,EAAU,CAAC;YAE7C,GAAG,CAAC,CAAE,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,EAAE,CAAC,EAAE,EAAC,CAAC;gBAErC,EAAE,CAAC,CAAE,eAAe,CAAC,MAAM,IAAI,CAAC,CAAC,CAAA,CAAC;oBAE9B,eAAe,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,UAAU,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC;gBAChE,CAAC;gBAED,IAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC7D,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,CAAE,CAAC,CAAE,CAAC;gBAC7B,EAAE,CAAA,CAAE,eAAe,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,SAAU,CAAC;oBACxC,UAAU,CAAC,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACxD,CAAC;YAED,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;QAC9C,CAAC;QAEL,gCAAC;IAAD,CAlNA,AAkNC,IAAA;IAlNY,iCAAyB,4BAkNrC,CAAA;;;;;;;;;;;;;;ICvQD;QAsBE,gBAAoB,KAAY,EACZ,MAAc,EACd,2BAAyD,EACzD,KAAoB;YAHpB,UAAK,GAAL,KAAK,CAAO;YACZ,WAAM,GAAN,MAAM,CAAQ;YACd,gCAA2B,GAA3B,2BAA2B,CAA8B;YACzD,UAAK,GAAL,KAAK,CAAe;YApBxC,iBAAY,GAAY,MAAM,CAAC;YAC/B,kBAAa,GAAY,OAAO,CAAC;YAMjC,kBAAa,GAAY,GAAG,CAAC;YAC7B,kBAAa,GAAY,UAAU,CAAC;YACpC,gBAAW,GAAY,QAAQ,CAAC;YAMhC,oBAAe,GAAW,EAAE,CAAC;YAwC7B,eAAU,GAAS,IAAI,CAAC;YAyBxB,sBAAiB,GAAa,KAAK,CAAC;YAgIpC,yBAAoB,GAAa,KAAK,CAAC;YAwCvC,eAAU,GAAQ;gBACpB,QAAQ,EACR,kIACgF;gBAEhF,WAAW,EACX,4dAQ+C;gBAE/C,qBAAqB,EACnB;oBACE,EAAC,CAAC,EAAE,+CAA+C,EAAE,CAAC,EAAC,wBAAwB,EAAE,MAAM,EAAC,EAAE,EAAE,KAAK,EAAG,EAAE,EAAE,KAAK,EAAG,EAAE,EAAC;oBACnH,EAAC,CAAC,EAAE,kCAAkC,EAAE,CAAC,EAAC,8BAA8B,EAAE,MAAM,EAAC,EAAE,EAAE,KAAK,EAAG,EAAE,EAAE,KAAK,EAAG,GAAG,EAAC;iBAC9G;gBAEH,SAAS,EACT,4OASE;gBAEF,YAAY,EACZ,o3BAqCE;gBACF,sBAAsB,EAAG;oBACtB,EAAE,CAAC,EAAC,4CAA4C,EAAE,CAAC,EAAE,YAAY,EAAE,MAAM,EAAC,EAAE,EAAE,KAAK,EAAC,EAAE,EAAE,KAAK,EAAC,EAAE,EAAE;oBAClG,EAAE,CAAC,EAAC,gCAAgC,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAC,EAAE,EAAE,KAAK,EAAC,YAAY,EAAE,KAAK,EAAC,EAAE,EAAE,CAAC;aAC/F,CAAC;YASD,iBAAY,GAAQ;gBAClB,IAAI,EAAG,gkJAiMR;gBAED,SAAS,EACT;oBACC,EAAE,CAAC,EAAC,4CAA4C,EAAE,CAAC,EAAE,YAAY,EAAE,MAAM,EAAC,EAAE,EAAE,KAAK,EAAC,EAAE,EAAE,KAAK,EAAC,EAAE,EAAE;oBAClG,EAAE,CAAC,EAAC,gCAAgC,EAAE,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAC,EAAE,EAAE,KAAK,EAAC,EAAE,EAAE,KAAK,EAAC,EAAE,EAAE;iBAClF;aAEA,CAAC;YAhgBC,EAAE,CAAC,CAAE,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,CAAA,CAAC;gBACvB,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;YACvC,CAAC;YAED,IAAI,CAAC,IAAI,GAAI,KAAK,CAAC,IAAI,CAAC;YACxB,IAAI,CAAC,eAAe,EAAE,CAAC;YAGvB,IAAI,CAAC,KAAK,GAAG,IAAI,KAAK,EAAQ,CAAC;QACjC,CAAC;QAGD,4BAAW,GAAX;QAEA,CAAC;QAGD,yBAAQ,GAAR;YACE,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAE,IAAI,CAAC,IAAI,CAAE,CAAC;QACnC,CAAC;QAED,4BAAW,GAAX;YACE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;iBACvC,IAAI,CACH,UAAC,GAAG;gBACF,EAAE,CAAC,CAAE,GAAG,CAAC,MAAM,IAAI,CAAE,CAAC,CAAA,CAAC;gBAGvB,CAAC;YACL,CAAC,CAAC,CAAC;QACP,CAAC;QAGD,gCAAe,GAAf;YACK,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,2BAA2B,CAAC,qBAAqB,EAAE,CAAC;YAC3E,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,+CAAqB,EAAE,CAAC,CAAC;YAGxD,IAAM,KAAK,GAAG,oCAAe;iBAClB,MAAM,CAAC,cAAc,CAAC;iBACtB,WAAW,CAAC,UAAU,CAAC;iBACnB,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE;iBAE1C,MAAM,CAAC,YAAY,CAAC;iBACpB,WAAW,CAAC,QAAQ,CAAC;iBACjB,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,QAAQ,EAAE;iBACtC,KAAK,CAAC;YAErB,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAE7C,CAAC;QAED,kCAAiB,GAAjB;YACE,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;QACjC,CAAC;QAMD,0BAAS,GAAT;YACE,IAAI,QAAQ,GAAG,EAAE,CAAC;YAClB,IAAI,MAAM,GAAG,EAAE,CAAC;YAEhB,EAAE,CAAC,CAAE,IAAI,CAAC,YAAY,IAAI,MAAM,CAAC,CAAA,CAAC;gBAC9B,IAAG,CAAC;oBACF,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC1C,CAAC;gBAAA,KAAK,CAAA,CAAC,EAAE,CAAC,CAAA,CAAC;oBACT,MAAM,CAAC,IAAI,CAAE,EAAE,CAAC,QAAQ,EAAE,CAAE,CAAC;gBAC/B,CAAC;YACL,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAE,IAAI,CAAC,YAAY,IAAI,KAAK,CAAC,CAAA,CAAC;gBACpC,IAAI,SAAS,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,UAAU,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC,CAAA;gBAE9D,EAAE,CAAC,CAAE,SAAS,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA,CAAC;oBAChC,MAAM,CAAC,IAAI,CAAE,SAAS,CAAC,MAAM,CAAE,CAAC;gBAClC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC;gBAC5B,CAAC;YACL,CAAC;YAED,EAAE,CAAC,CAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA,CAAC;gBACtB,IAAI,CAAC,iBAAiB,GAAG,KAAK,CAAC;gBAC/B,KAAK,CAAE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC1B,MAAM,CAAC;YACT,CAAC;YAED,IAAI,CAAC,UAAU,GAAG,QAAQ,CAAC;YAC3B,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC;YAC9B,OAAO,CAAC,GAAG,CAAE,aAAa,CAAC,CAAC;QAC9B,CAAC;QAGD,wBAAO,GAAP,UAAQ,GAAG;YAEP,IAAI,KAAK,GAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAE1B,IAAI,MAAM,GAAG,EAAE,CAAC;YAEhB,IAAI,OAAO,GAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAEhC,GAAG,CAAA,CAAC,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,KAAK,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC,CAAC;gBAE5B,IAAI,GAAG,GAAG,EAAE,CAAC;gBACb,IAAI,WAAW,GAAC,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAEpC,GAAG,CAAA,CAAC,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,OAAO,CAAC,MAAM,EAAC,CAAC,EAAE,EAAC,CAAC;oBAC9B,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC;gBACrC,CAAC;gBAED,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAErB,CAAC;YAGD,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;QAClC,CAAC;QAGD,oCAAmB,GAAnB,UAAoB,MAAM;YAEvB,IAAK,KAAK,GAAG,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,IAAI,EAAE,CAAC;YAE/D,KAAK,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,EAAC,IAAI,CAAC,CAAC;YAEnC,IAAI,OAAO,GACV,IAAI,CAAC,cAAc;gBAClB,IAAI,CAAC,sBAAsB,CAAE,KAAK,CAAE;gBACpC,IAAI,CAAC,aAAa,CAAE,KAAK,CAAE,CAAC;YAE9B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAE,OAAO,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;QACzD,CAAC;QAGF,8BAAa,GAAb,UAAc,UAAU;YACrB,IAAI,OAAO,GAAG,EAAE,CAAC;YAEjB,IAAI,IAAI,GAAG,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAGlC,IAAI,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAGlC,GAAG,CAAC,CAAC,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,IAAI,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,CAAC;gBAC/C,IAAI,CAAC,GAAG,EAAE,CAAC;gBACX,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAGnC,GAAG,CAAC,CAAC,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE,CAAC;oBAClD,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,CAAC;gBAC7C,CAAC;gBAED,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACpB,CAAC;YAED,MAAM,CAAC,OAAO,CAAC;QACjB,CAAC;QAGD,uCAAsB,GAAtB,UAAwB,UAAmB;YACzC,IAAI,OAAO,GAAG,EAAE,CAAC;YAEjB,IAAI,IAAI,GAAG,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAGlC,IAAI,OAAO,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAGlC,GAAG,CAAC,CAAE,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,OAAO,CAAC,MAAM,GAAC,CAAC,EAAE,MAAM,EAAE,EAAC,CAAC;gBACzD,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YACnB,CAAC;YAED,GAAG,CAAC,CAAC,IAAI,MAAM,GAAG,CAAC,EAAE,MAAM,GAAG,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE,CAAC;gBAClD,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBACnC,IAAI,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC;gBAGzB,GAAG,CAAC,CAAC,IAAI,OAAO,GAAG,CAAC,EAAE,OAAO,GAAG,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,EAAE,CAAC;oBACpD,OAAO,CAAC,OAAO,GAAC,CAAC,CAAC,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,CAAC;gBACnD,CAAC;YACL,CAAC;YAED,MAAM,CAAC,OAAO,CAAC;QACjB,CAAC;QAMD,qCAAoB,GAApB,UAAqB,MAAM;YAEzB,IAAI,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC;YAEtC,EAAE,CAAC,CAAE,SAAU,CAAC,CAAC,CAAC;gBAEhB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,UAAU,CAAC;gBAC1C,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,eAAe,CAAC;gBACpD,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAC3B,CAAC;YAAC,IAAI,CAAA,CAAC;gBAGL,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,kBAAkB,CAAC;gBAC1C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,uBAAuB,CAAC;YACtD,CAAC;QAEH,CAAC;QAED,kCAAiB,GAAjB;YACE,EAAE,CAAC,CAAE,IAAI,CAAC,oBAAqB,CAAC,CAAA,CAAC;gBAC/B,IAAI,MAAM,GAAG,IAAI,CAAC,YAAY,GAAG,GAAG,GAAG,IAAI,CAAC,aAAa,CAAC;gBAC1D,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAE,MAAM,CAAE,CAAC;gBAE5C,IAAI,eAAe,GAAG,IAAI,CAAC,YAAY,GAAG,GAAG,GAAG,IAAI,CAAC,aAAa,GAAG,GAAG,GAAG,WAAW,CAAC;gBACvF,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,IAAI,EAAE,CAAC;YAChE,CAAC;QACH,CAAC;QAED,4BAAW,GAAX;YACE,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,CAAC,EAAC,EAAE,EAAC,MAAM,EAAC,EAAE,EAAE,KAAK,EAAC,EAAE,EAAE,KAAK,EAAC,EAAE,EAAC,CAAC,CAAC;QAC9E,CAAC;QAED,+BAAc,GAAd,UAAe,CAAC;YACd,IAAI,EAAE,GAAG,CAAC,CAAC,OAAO,CAAE,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC,CAAC;YAC7C,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QACrC,CAAC;QAiFF,+BAAc,GAAd;YACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;YACzC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC;YACnD,IAAI,CAAC,SAAS,EAAE,CAAC;QACnB,CAAC;QA+MD,4BAAW,GAAX;YACE,IAAI,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC;YAC3B,IAAI,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC;YAErC,EAAE,CAAC,CAAE,IAAI,CAAC,aAAa,IAAI,IAAK,CAAC,CAAA,CAAC;gBAEhC,IAAI,KAAK,GAAG,CAAC,CAAC,IAAI,CAAE,IAAI,CAAC,CAAC,CAAC,CAAE,CAAC;gBAC9B,GAAG,CAAA,CAAa,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,CAAC;oBAAhB,IAAI,GAAG,aAAA;oBACV,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,IAAI,iBAAI,CAAC,IAAI,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;iBAChE;YAEH,CAAC;YAAA,IAAI,CAAA,CAAC;gBAEJ,IAAI,MAAM,GAAG,IAAI,+CAAyB,EAAE,CAAC;gBAE7C,GAAG,CAAA,CAAW,UAAS,EAAT,uBAAS,EAAT,uBAAS,EAAT,IAAU,CAAC;oBAApB,IAAI,CAAC,kBAAA;oBACR,IAAI,GAAG,GAAG,MAAM,CAAC,WAAW,CAAE,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;oBAE1C,EAAE,CAAC,CAAE,IAAK,CAAC,CAAA,CAAC;wBACV,IAAI,QAAQ,GAAiB,GAAG,CAAC,OAAO,CAAC;wBACzC,GAAG,CAAA,CAAW,UAAQ,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ,CAAC;4BAAnB,IAAI,EAAE,iBAAA;4BACR,IAAI,CAAC,KAAK,CAAC,IAAI,CAAE,IAAI,iBAAI,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;yBAC9C;oBACH,CAAC;iBACD;YAIJ,CAAC;QACH,CAAC;QAED,2BAAU,GAAV;YACE,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;QAClB,CAAC;QAED,0BAAS,GAAT;YACE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAE,IAAI,CAAC,KAAK,CAAE,CAAC;YACjC,IAAI,CAAC,SAAS,EAAE,CAAC;YACjB,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QACrC,CAAC;QAED,0BAAS,GAAT;YACE,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;YAChB,IAAI,CAAC,eAAe,GAAG,EAAE,CAAC;YAC1B,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QAEvB,CAAC;QA9kBF;YAAC,0BAAM,CAAC,kBAAK,EAAE,uBAAM,EAAE,gDAA2B,EAAE,6BAAY,CAAC;;kBAAA;QAilBjE,aAAC;IAAD,CAhlBA,AAglBC,IAAA;IAhlBY,cAAM,SAglBlB,CAAA;;;;;;;;;;;;;;IC5lBD;QAQE,eAAoB,KAAY,EAAU,MAAc,EAAU,KAAmB;YAAjE,UAAK,GAAL,KAAK,CAAO;YAAU,WAAM,GAAN,MAAM,CAAQ;YAAU,UAAK,GAAL,KAAK,CAAc;QACrF,CAAC;QAED,wBAAQ,GAAR;YACE,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC;QACvB,CAAC;QAED,sBAAM,GAAN;YAAA,iBAgBC;YAdC,IAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;YAEjC,IAAI,eAAe,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAChD,EAAE,CAAC,CAAE,eAAe,KAAK,OAAO,CAAC,CAAA,CAAC;gBAChC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAE,UAAU,CAAE;qBACtC,IAAI,CAAE,UAAA,GAAG;oBACR,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC;gBACnB,CAAC,CAAC,CAAC;YACT,CAAC;YACD,EAAE,CAAC,CAAE,eAAe,KAAK,QAAQ,CAAC,CAAA,CAAC;gBACjC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAE,UAAU,CAAE;qBACjC,IAAI,CAAE,UAAA,GAAG,IAAM,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YAC3C,CAAC;QAEH,CAAC;QAED,kCAAkB,GAAlB;YACE,MAAM,CAAC,IAAI,CAAC,cAAc,IAAI,QAAQ,GAAG,QAAQ,GAAG,OAAO,CAAC;QAC9D,CAAC;QAGD,wBAAQ,GAAR,UAAU,OAAO;YAAjB,iBAOC;YALC,IAAI,CAAC,OAAO,CAAE,OAAO,CAAE,CAAC,IAAI,CAC1B,UAAA,IAAI;gBACA,KAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;gBACvB,KAAI,CAAC,MAAM,CAAC,eAAe,CAAC,MAAM,EAAC,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,CAAC;YACjD,CAAC,CAAC,CAAC;QACP,CAAC;QAGD,wBAAQ,GAAR,UAAU,OAAO;YAAjB,iBAOC;YANC,IAAI,CAAC,OAAO,CAAE,OAAO,CAAE;iBAClB,IAAI,CACP,UAAA,IAAI;gBACA,KAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;gBACvB,KAAI,CAAC,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;YACxC,CAAC,CAAC,CAAC;QACP,CAAC;QAED,uBAAO,GAAP,UAAU,OAAgB;YAExB,IAAI,OAAO,GAAG,IAAI,CAAC;YAEnB,IAAI,eAAe,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAEhD,EAAE,CAAC,CAAE,eAAe,KAAK,OAAO,CAAC,CAAA,CAAC;gBAChC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAE,OAAO,CAAE,CAAA;YAC9C,CAAC;YAED,EAAE,CAAC,CAAE,eAAe,KAAK,QAAQ,CAAC,CAAA,CAAC;gBACjC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAE,OAAO,CAAE,CAAA;YACzC,CAAC;YAED,MAAM,CAAC,OAAO,CAAC;QACjB,CAAC;QAED,0BAAU,GAAV,UAAY,OAAO;YAAnB,iBAGC;YAFC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAE,OAAO,CAAE;iBAC7B,IAAI,CAAE,cAAM,OAAA,KAAI,CAAC,MAAM,EAAE,EAAb,CAAa,CAAE,CAAC;QACjC,CAAC;QAED,uBAAO,GAAP;YAIE,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,iBAAI,CAAC,MAAM,EAAE,CAAC;YAChC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;QACtC,CAAC;QAtFH;YAAC,0BAAM,CAAC,kBAAK,EAAE,uBAAM,EAAE,6BAAY,CAAC;;iBAAA;QAuFpC,YAAC;IAAD,CAtFA,AAsFC,IAAA;IAtFY,aAAK,QAsFjB,CAAA;;;;;;;;;;;;;;ICxFD;QAQE,aAAqB,MAAe,EAAU,KAAa,EAAW,KAAoB;YAArE,WAAM,GAAN,MAAM,CAAS;YAAU,UAAK,GAAL,KAAK,CAAQ;YAAW,UAAK,GAAL,KAAK,CAAe;YAP1F,YAAO,GAAG,8BAA8B,CAAC;YASrC,EAAE,CAAC,CAAE,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,CAAA,CAAC;gBACvB,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;YACvC,CAAC;YAED,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;YACvB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;QAC/B,CAAC;QAGD,sBAAQ,GAAR,UAAS,MAAM;YAEX,IAAI,EAAE,GAAG,CAAC,CAAC;YACX,EAAE,CAAC,CAAE,MAAM,CAAC,EAAE,IAAI,IAAK,CAAC;gBACtB,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC;YAEjB,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,EAAE,CAAC;YAC3B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;YAEpC,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAChC,CAAC;QAED,sBAAQ,GAAR;YACE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACxD,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;QACrE,CAAC;QACD,sBAAQ,GAAR;YACE,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAEjE,CAAC;QAED,gCAAkB,GAAlB,UAAoB,CAAC,IAAI,CAAC;QAC1B,2BAAa,GAAb,UAAc,CAAC;YAQX,IAAI,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;YACjC,MAAM,CAAA,CAAE,MAAO,CAAC,CAAA,CAAC;gBAEf,KAAK,GAAG;oBACN,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;oBAChB,KAAK,CAAC;gBACR,KAAK,GAAG;oBACN,IAAI,CAAC,KAAK,EAAE,CAAC;oBACb,KAAK,CAAC;gBACR,KAAK,GAAG;oBACN,IAAI,CAAC,KAAK,EAAE,CAAC;oBACb,KAAK,CAAC;gBAER,KAAK,GAAG;oBACN,IAAI,CAAC,IAAI,EAAE,CAAC;oBACZ,KAAK,CAAC;gBAER,KAAK,GAAG;oBACN,IAAI,CAAC,YAAY,EAAE,CAAC;oBACpB,KAAK,CAAC;gBAER,KAAK,GAAG;oBACN,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;oBACxB,KAAK,CAAC;gBAER,KAAK,WAAW;oBACd,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAChB,KAAK,CAAC;gBACR,KAAK,YAAY;oBACf,IAAI,CAAC,IAAI,EAAE,CAAC;oBACZ,KAAK,CAAC;gBAER,KAAK,GAAG;oBACN,IAAI,CAAC,cAAc,EAAE,CAAC;oBACtB,KAAK,CAAC;gBAER,KAAK,GAAG;oBACN,IAAI,CAAC,UAAU,EAAE,CAAA;YACrB,CAAC;QACL,CAAC;QAED,4BAAc,GAAd;YACE,IAAI,CAAC,YAAY,GAAG,CAAC,IAAI,CAAC,YAAY,CAAC;QACzC,CAAC;QAED,yBAAW,GAAX,UAAY,CAAC;YACX,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YACrB,OAAO,CAAC,GAAG,CAAE,CAAC,CAAE,CAAC;QAGnB,CAAC;QAED,uBAAS,GAAT,UAAU,CAAC;YAET,EAAE,CAAC,CAAE,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,IAAI,QAAQ;gBACnC,CAAC,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,IAAI,QAAQ,CAAC;gBACvC,MAAM,CAAC;YAGT,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YACnB,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACf,IAAI,CAAC,YAAY,EAAE,CAAC;QACtB,CAAC;QAED,kBAAI,GAAJ,UAAK,CAAC;YACH,IAAI,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;QAC9C,CAAC;QAGD,mBAAK,GAAL;YACG,IAAI,CAAC,OAAO,CAAE,yBAAY,CAAC,KAAK,CAAE,CAAC;QACtC,CAAC;QAED,mBAAK,GAAL;YACG,IAAI,CAAC,OAAO,CAAE,yBAAY,CAAC,KAAK,CAAE,CAAC;QACtC,CAAC;QAED,kBAAI,GAAJ;YACG,IAAI,CAAC,OAAO,CAAE,yBAAY,CAAC,IAAI,CAAE,CAAC;QACrC,CAAC;QAED,qBAAO,GAAP,UAAS,QAAuB;YAAhC,iBAcC;YAZC,EAAE,CAAC,CAAE,IAAI,CAAC,cAAe,CAAC;gBACtB,MAAM,CAAC;YAEV,IAAI,CAAC,IAAI,CAAC,IAAI,CAAE,QAAQ,CAAE,CAAC;YAK3B,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC;YAE3B,MAAM,CAAC,UAAU,CAAE,UAAA,CAAC,IAAI,OAAA,KAAI,CAAC,IAAI,EAAE,EAAX,CAAW,EAAE,GAAG,CAAE,CAAC;QAE9C,CAAC;QAED,sBAAQ,GAAR;YACG,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YACjC,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,MAAM,EAAE,EAAE,EAAE,EAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAC,CAAC,CAAC;QACjE,CAAC;QAED,kBAAI,GAAJ;YACG,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;YAE5B,EAAE,CAAC,CAAE,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,CAAA,CAAC;gBACnB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;gBACjB,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,MAAM,EAAE,EAAE,EAAE,EAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAC,CAAC,CAAC;YAClE,CAAC;YAAA,IAAI,CAAA,CAAC;YAGN,CAAC;YAED,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;QAChC,CAAC;QAID,mBAAK,GAAL;YACE,IAAI,CAAC,QAAQ,EAAE,CAAC;QAClB,CAAC;QAOD,0BAAY,GAAZ,UAAc,SAA2B;YAA3B,yBAA2B,GAA3B,iBAA2B;YACrC,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,SAAS,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAE;QACzE,CAAC;QAED,oBAAM,GAAN;YACI,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QACrC,CAAC;QAED,sBAAQ,GAAR;YACI,IAAI,CAAC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QACtC,CAAC;QAGD,0BAAY,GAAZ;YACG,GAAG,CAAA,CAAe,UAAe,EAAf,KAAA,IAAI,CAAC,IAAI,CAAC,KAAK,EAAf,cAAe,EAAf,IAAgB,CAAC;gBAA9B,IAAI,KAAK,SAAA;gBACZ,KAAK,CAAC,QAAQ,GAAG,yBAAY,CAAC,SAAS,CAAC;gBACxC,KAAK,CAAC,eAAe,GAAG,KAAK,CAAC;aAC/B;QACJ,CAAC;QAED,iCAAmB,GAAnB;YACG,IAAI,CAAC,YAAY,EAAE,CAAC;YACpB,GAAG,CAAA,CAAe,UAAe,EAAf,KAAA,IAAI,CAAC,IAAI,CAAC,KAAK,EAAf,cAAe,EAAf,IAAgB,CAAC;gBAA9B,IAAI,KAAK,SAAA;gBACZ,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC;gBACrB,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC;gBACrB,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC;aACrB;QACJ,CAAC;QAGD,wBAAU,GAAV;YACE,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;QACxC,CAAC;QAED,uBAAS,GAAT;YACE,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,CAAA;QACtC,CAAC;QAED,sBAAQ,GAAR;YACE,IAAI,CAAC,KAAK;iBACL,QAAQ,CAAE,IAAI,CAAC,IAAI,CAAE;iBACrB,IAAI,CAAE,cAAM,OAAA,KAAK,CAAC,aAAa,CAAC,EAApB,CAAoB,CAAE,CAAC;QAC1C,CAAC;QA5NH;YAAC,0BAAM,CAAE,uBAAM,EAAE,kBAAK,EAAE,6BAAY,CAAC;;eAAA;QA8NrC,UAAC;IAAD,CA7NA,AA6NC,IAAA;IA7NY,WAAG,MA6Nf,CAAA;;;;;;;;;;;;;;IC7ND;QAOI,gBAAqB,KAAa,EAAU,MAAe;YAAtC,UAAK,GAAL,KAAK,CAAQ;YAAU,WAAM,GAAN,MAAM,CAAS;YAEvD,EAAE,CAAC,CAAE,IAAI,CAAC,KAAK,CAAC,IAAI,KAAK,SAAU,CAAC,CAAA,CAAC;gBACjC,IAAI,CAAC,QAAQ,EAAE,CAAC;YACpB,CAAC;YAAA,IAAI,CAAA,CAAC;gBACF,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;YAChC,CAAC;QACL,CAAC;QAED,yBAAQ,GAAR;YACI,IAAI,CAAC,MAAM,CAAC,eAAe,CAAC,MAAM,EAAE,EAAC,EAAE,EAAC,GAAG,EAAC,CAAC,CAAC;QAClD,CAAC;QAED,yBAAQ,GAAR;YACI,IAAI,CAAC,aAAa,EAAE,CAAC;QACzB,CAAC;QAED,8BAAa,GAAb;YAEI,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC;YAElC,IAAI,CAAC,aAAa,GAAI,KAAK,CAAC,MAAM,CAAC;YACnC,IAAI,CAAC,uBAAuB,GAAG,CAAC,CAAC;YACjC,IAAI,CAAC,iBAAiB,GAAG,CAAC,CAAC;YAC3B,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;YAE1B,GAAG,CAAA,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;gBAEnC,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBAEpB,EAAE,CAAC,CAAE,IAAI,CAAC,UAAU,GAAG,CAAE,CAAC;oBACtB,IAAI,CAAC,uBAAuB,EAAE,CAAC;gBACnC,IAAI,CACA,EAAE,CAAC,CAAE,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;oBACrB,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBAC7B,IAAI,CACA,EAAE,CAAC,CAAE,IAAI,CAAC,SAAS,GAAG,CAAE,CAAC;oBACrB,IAAI,CAAC,gBAAgB,EAAE,CAAC;YAExC,CAAC;QAGL,CAAC;QAIJ,yBAAQ,GAAR;YACG,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACxD,MAAM,CAAC,gBAAgB,CAAC,SAAS,EAAE,IAAI,CAAC,kBAAkB,EAAE,KAAK,CAAC,CAAC;QACrE,CAAC;QACD,yBAAQ,GAAR;YACE,MAAM,CAAC,mBAAmB,CAAC,SAAS,EAAE,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAEjE,CAAC;QAED,mCAAkB,GAAlB,UAAoB,CAAC,IAAI,CAAC;QAC1B,8BAAa,GAAb,UAAc,CAAC;YACb,IAAI,MAAM,GAAG,CAAC,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;YAEjC,MAAM,CAAA,CAAE,MAAO,CAAC,CAAA,CAAC;gBACb,KAAK,WAAW,CAAC;gBACjB,KAAK,WAAW;oBACZ,IAAI,CAAC,QAAQ,EAAE,CAAC;oBAChB,KAAK,CAAC;YACd,CAAC;QAEH,CAAC;QA1EH;YAAC,0BAAM,CAAE,kBAAK,EAAE,uBAAM,CAAE;;kBAAA;QA2ExB,aAAC;IAAD,CA1EA,AA0EC,IAAA;IA1EY,cAAM,SA0ElB,CAAA;;;;;IC5ED;QAcI,yBAAoB,IAAa;YAAb,SAAI,GAAJ,IAAI,CAAS;YALjC,YAAO,GAAa,KAAK,CAAC;YAG1B,YAAO,GAAW,IAAI,CAAC;YAInB,IAAG,CAAC;gBACA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAE,CAAC;YACnC,CACA;YAAA,KAAK,CAAA,CAAC,CAAE,CAAC,CAAA,CAAC;gBACN,IAAI,CAAC,OAAO,GAAG,sCAAsC,CAAC;YAC1D,CAAC;YAED,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAE,IAAI,CAAC,IAAI,CAAE,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA,CAAC;gBACrD,IAAI,CAAC,OAAO,GAAG,uCAAuC,CAAC;gBACvD,MAAM,CAAC;YACX,CAAC;YAGD,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,YAAY,GAAG,CAAC,CAAC,OAAO,CAAE,KAAK,CAAE,CAAC;YAEtC,IAAI,CAAC,GAAG,CAAC,CAAC;YAEV,GAAG,CAAA,CAAa,UAAS,EAAT,KAAA,IAAI,CAAC,IAAI,EAAT,cAAS,EAAT,IAAS,CAAC;gBAArB,IAAI,GAAG,SAAA;gBACR,EAAE,CAAC,CAAC,CAAE,CAAC,CAAC,OAAO,CAAE,YAAY,EAAE,CAAC,CAAC,OAAO,CAAE,GAAG,CAAE,CAAE,CAAC,CAAA,CAAC;oBAC/C,IAAI,CAAC,OAAO,GAAG,gCAA8B,CAAC,gEAA6D,CAAC;oBAC5G,MAAM,CAAC;gBACX,CAAC;gBACD,CAAC,EAAE,CAAC;aACP;YAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACxB,CAAC;QAED,mCAAS,GAAT;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;QAID,iCAAO,GAAP;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;QAED,iCAAO,GAAP;YACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QACrB,CAAC;QAED,uCAAa,GAAb;YACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACvB,CAAC;QACL,sBAAC;IAAD,CA9DA,AA8DC,IAAA;IA9DY,uBAAe,kBA8D3B,CAAA;;;;;IC9DD;QAWI,4BAAoB,IAAa;YAAb,SAAI,GAAJ,IAAI,CAAS;YALjC,YAAO,GAAa,KAAK,CAAC;YAG1B,YAAO,GAAW,IAAI,CAAC;YAInB,IAAG,CAAC;gBACA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAE,IAAI,CAAE,CAAC;YACnC,CACA;YAAA,KAAK,CAAA,CAAC,CAAE,CAAC,CAAA,CAAC;gBACN,IAAI,CAAC,OAAO,GAAG,sCAAsC,CAAC;YAC1D,CAAC;YAED,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAE,IAAI,CAAC,IAAI,CAAE,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAA,CAAC;gBACrD,IAAI,CAAC,OAAO,GAAG,uCAAuC,CAAC;gBACvD,MAAM,CAAC;YACX,CAAC;YAGD,IAAI,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,YAAY,GAAG,CAAC,CAAC,OAAO,CAAE,KAAK,CAAE,CAAC;YAEtC,IAAI,CAAC,GAAG,CAAC,CAAC;YAEV,GAAG,CAAA,CAAa,UAAS,EAAT,KAAA,IAAI,CAAC,IAAI,EAAT,cAAS,EAAT,IAAS,CAAC;gBAArB,IAAI,GAAG,SAAA;gBACR,EAAE,CAAC,CAAC,CAAE,CAAC,CAAC,OAAO,CAAE,YAAY,EAAE,CAAC,CAAC,OAAO,CAAE,GAAG,CAAE,CAAE,CAAC,CAAA,CAAC;oBAC/C,IAAI,CAAC,OAAO,GAAG,gCAA8B,CAAC,gEAA6D,CAAC;oBAC5G,MAAM,CAAC;gBACX,CAAC;gBACD,CAAC,EAAE,CAAC;aACP;YAED,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;QACxB,CAAC;QAED,sCAAS,GAAT;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;QAID,oCAAO,GAAP;YACI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACxB,CAAC;QAED,oCAAO,GAAP;YACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QACrB,CAAC;QAED,0CAAa,GAAb;YACI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACvB,CAAC;QACL,yBAAC;IAAD,CA3DA,AA2DC,IAAA;IA3DY,0BAAkB,qBA2D9B,CAAA;;;;;IC5DD,mBAA0B,MAA8B;QACtD,MAAM,CAAC,eAAe,CAAC,CAAE,2BAA2B,CAAC,CAAC,CAAC;IACzD,CAAC;IAFe,iBAAS,YAExB,CAAA;;;;;ICJD;QAAA;QAOA,CAAC;QANA,4CAAM,GAAN,UAAO,KAAK,EAAE,MAAM;YACjB,EAAE,CAAC,CAAC,CAAC,KAAK,IAAI,KAAK,KAAK,CAAC,CAAC;gBACxB,MAAM,CAAC,IAAI,CAAC;YACd,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;QACvC,CAAC;QAEH,kCAAC;IAAD,CAPA,AAOC,IAAA;IAPY,mCAA2B,8BAOvjbnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxlHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtpZA;ACCA,4BAA4B;ACD5B,ADEA,KAAK,CAAA;AEDL,EFEI,UAAU,EAAE,cEFY,SFEY,GASvC;AKZD,AHEA,EFAA,GEAK,CAAA,KFAA,CAGI;AMLT,EJGI,EFGA,OAAO,CEHG,CFGD,CEHG,CFGA,GACX,mBEJmC,GASvC;AKXA,EPCD,AEAA,EKDK,CAAA,KPCA,CAOG,AEPH,CAGI;AMLT,EDEI,EPQI,AEJJ,OFIW,AEJJ,EFIM,AORF,ALIF,CFIM,CORF,ALID,EFKX,CEJA,yBKLyC,GAC5C;AEHF,EPEA,QAAK,CAOG,EOTK,CAAA;ATeb,AUZA,AHGC,EELG,EPSI,OOTK,APSE,EOTD,APSG,CAAE,CQPJ,AHGC,CAAA,CPSC,ASdE,APUd;ASXL,AXgBA,AUZA,EHGK,AELD,GCEC,CAAA,EDFK,ETcA,ASdC,CTcD,COTK,CELA,CFKE,IAAK;AKPtB,AVeA,EFEI,AUZA,AHGC,AELD,KAAK,CTcC,AUZA,CDFA,CTcC,AUZA,CHGG,EAAC,CGHC,GVYG,AEFF,CKPI,EPUpB,KSfa;APad,EQVI,AHGC,AELD,QFKS,ALOH,COZG,APYH,CKPI,CELA,ECEG,EAAC,CDFE,EFKG,CEJtB,EFKC,SGJgC,GACjC;ERUG,MAAM,EAAC,OAAQ,GAClB;AQTD,AHGC,AEJD,AAAc,OFIN,CAAC,EGHC,CAAA,EDDG,CAAC,EAAE,EAAE,AAAc,aAAD,CAAC,EAAE,CAAA;ANNlC,EOQI,AHGD,AEJC,KCCK,CDDC,CCCC,CDDA,GCCK,CHGD,AEJC,EFIA,CAAE,CJXA;ACOlB,EMEI,AHGD,AEJC,OFIM,EGHG,AHGF,EGHG,ADDC,CFIA,CEJC,GCCI,ADDA,GCEnB,UNH8B;AAE/B,AAAK,EGIF,AEJC,GLAC,KAAK,CAAA,AGIE,EAAC,EEJI,EFIC,AEJC,IAAK;ACGxB,AAAkB,ENFd,AGID,AEJC,QLAQ,AMEF,CAAC,CNFG,GGIE,CEJE,CCED,AHEA,CGFC,ADFC,ELAI,AGIF,CEJE,ECEA,CAAA;ENDnB,AMEA,AHED,AEJC,MLAM,EAAC,CMEE,CHEA,CGFE,CHEA,CHJE,AKAA,EAAE,CLClB,AMCoB,AHED,kBEJmB,GACtC;ECEG,AHED,QAAQ,CGFE,CHED,CGFG,KAAM,AHEF;AHFnB,AAAW,AKAX,AAAc,ECCV,AHED,GHHE,EMCI,EAAE,CNDD,CAAC,EMCK,ADDH,CAAC,ECEb,AHCgB,EAAC,GEHG,CAAC,CFGE,CHHA,CAAA,CGItB;EHHE,AKAA,ULAU,AKAA,ELAE,AKAD,ILAM,AKAD;ACGpB,AAAuB,AHEtB,EHJG,AKAA,GFIE,CAAA,IHJM,AMEF,CAAC,CNFG,EKAE,EAAE,ELAG,CKAC,ELCrB,CMCqB,ADDrB,CCCsB,KAAK,CAAA;EACxB,AHEC,QAAQ,CGFA,CHEC,CGFA,KAAM,EHEG;AHFvB,AAAW,AKCX,ECAI,AHEC,GHHA,AGGG,EAAC,CAAE,AEFH,CAAA,CLDE,CAAC,AMCE,EAAC,KAAM,KNDG,CAAA;EACnB,AMCA,AHEC,AEFD,KCAK,AHEC,EGFC,AHEA,AEFA,CLDC,AGGC,CEFD,CLDE,CMCE,GACf,INFsB,AKCD,GACrB;ELDG,AGGC,MHHK,EAAE,CAAE,CGGC,EAAE,IAAK;AGAtB,ADAA,ELFI,AGGC,IHHG,AKEF,CAAN,CLFU,CAAE,AGGA,EAAE,CAAE,CEDV,MAAM,SAAS,EAAE,KAAK,SCAgB;AAE5C,AAAW,ENHP,AGGC,AEDD,AAAgB,EAAd,GLFG,CGGE,CHHA,CAAE,AMGH,AHAE,CGAD,AHAG,EHFb,GKCkB,CAAA,CAAC,CCCD,CAAA;EACf,AHAC,AEDD,AAAgB,EAAd,GCCG,EAAC,AHAE,EAAG,CGAD,GACb,AHDmB,CEDD,CAAA,CFEjB,AEFkB,EAAC;ALArB,IKCQ,ELDF,CAAN,IKCe,ELDT,AKCU,IAAK,ELDT,CKEP,QLFgB,EAAE,KAAK;AMI5B,AAAY,AHAX,AAAK,EHHF,AAAK,GGGH,EHHG,IMGE,CNHG,AMGF,AHAC,CHHC,AGGD,OGAO,CAAA;EAChB,AHAC,EHHG,GMGC,EAAC,GAAI,ENHI,EAAE,IAAK,EGGA;EGCrB,AHAC,EHHG,GGGE,CGAA,CHAE,CGAD,INHO,AMGF,ENHG,AGGC,CGCnB,EHAC,WHJgC;IAC1B,WAAW,EAAC,IAAK;AMKzB,AAAW,AHAV,IHJO,MMIE,CAAC,EAAE,CAAA,ENJO,EAAC,IAAK;EMKtB,ENJI,YMIU,CNJG,CMID,CNJG,CAAE,CMID,GACvB;INJO,AGIJ,MHJU,EAAC,CAAE,GACZ;AMKL,AAAQ,AHAP,AAAM,EHHH,AAAW,GGGT,CAAC,CHHE,CMGD,EHAG,CAAA,CHHG,CAAC,UMGQ,CAAA,CNHI,CAAA;EMIvB,AHAC,EHHG,OAAO,EAAC,AMGD,AHAC,EGAA,AHAE,CGAA,GHAK,GHHG,GACrB;EMGD,AHAC,SAAS,EAAC,EGAE,EAAC,AHAE,CGAA,EHClB,CGAD;ANQD;AMNA,AHDC,AAAM,KAAD,CGCA,AHDC,CGCP,GHDW,CAAC,EGCN,MAAM,SAAS,EAAE,KAAK;EAExB,AAA2B,AHF1B,WAAW,EAAE,IAAK,SGEO,CAAC,KAAK,CAAA;EHD/B,EGEG,OAAO,EAAC,GHFG,CGEE,CHFA,EGGhB,CHHoB,GACvB;EHQA,AMJE,AAA0B,yBAAD,CAAC,EAAE,CAAA;ANKhC,AGPC,IGGO,ENIF,CAAN,AGPQ,CAAA,GGGO,ENIT,AMJW,IAAK,ENIV,SAAS,EAAE,KAAK;EAExB,AAAe,AGRd,EGGG,KHHI,EAAC,CHQC,CAAC,IAAI,CMLG,AHHD,EGGE,KNKI,CAAC,AMLE,GACzB;EAED,AAAE,AHLD,EHQG,AMHF,QHLS,EAAC,CHQG,AMHF,CAAA,CNGG,CAAE,AGRD;EAChB,EHQG,AMHA,MHLK,EAAC,GGKK,CNGC,CMHA,CNGC,AMHC,CNGC,CGRA;EAClB,EHQG,AMHA,GHLE,EAAE,CHQE,AGRA,EHQC,EMHG,EAAC,CNGE,GAChB,CMJoB;ENMrB,AAA8B,AGV7B,EGKG,KHLI,EAAE,CHUA,CAAC,AGVE,GACf,CHSiB,AMLE,EAAC,GAAI,GNKC,AMJtB,GNIyB,IAAI,IAAI,CAAA;IAC1B,YAAY,EAAC,CAAE;AGR1B,AAAoB,IHST,SGTE,CAAC,GHSU,EAAC,CAAE,AGTP,GHUhB,IGVuB,CAAA;EACvB,MAAM,EAAC,iBAAkB,GAC5B;;AAED,WAAW,CAAA;EACR,SAAS,EAAE,IAAK;EAChB,WAAW,EAAE,IAAK;EAClB,OAAO,EAAE,EAAG,GACd;;AAED,IAAI,CAAA;EACD,WAAW,EAAC,GAAI;EAChB,SAAS,EAAE,IAAK,GAClB;;AACD,AAAO,MAAD,CAAC,IAAI,CAAA;EACP,KAAK,EAAC,QAAS;EACf,SAAS,EAAC,IAAK,GAClB;;AAED,YAAY,CAAA;EACV,KAAK,EAAC,IAAK;EACX,OAAO,EAAC,IAAK;EACb,OAAO,EAAE,WAAY;EACrB,cAAc,EAAE,MAAO;EACvB,WAAW,EAAE,QAAS,GACvB;;AAED,wBAAwB;AACxB,MAAM,CAAN,MAAM,MAAM,SAAS,EAAE,KAAK;EAExB,eAAe,CAAA;IACZ,UAAU,EAAE,MAAO,GACrB;EAED,WAAW,CAAA;IACP,cAAc,EAAE,MAAO;IACvB,WAAW,EAAE,MAAO;IACpB,MAAM,EAAC,MAAO,GACjB;EAED,AAAc,WAAH,GAAG,CAAC,CAAA;IACZ,KAAK,EAAC,IAAK;IACX,MAAM,EAAC,SAAU,GACnB;EAED,UAAU,CAAA;IACN,OAAO,EAAC,WAAY,GACvB;EAEF,YAAY,CAAA;IACR,WAAW,EAAC,OAAQ,GACvB;EAED,AAAW,UAAD,CAAC,MAAM,CAAA;IACb,MAAM,EAAC,IAAK;IACZ,IAAI,EAAE,CAAE,GACV;EACD,AAAiB,UAAP,CAAC,MAAM,cAAc,CAAA;IAAE,WAAW,EAAC,CAAE,GAAI;EACnD,AAAiB,UAAP,CAAC,MAAM,aAAa,CAAA;IAAE,YAAY,EAAC,CAAE,GAAI;EAEnD,AAAc,aAAD,CAAC,MAAM,CAAA;IAChB,OAAO,EAAC,MAAO,GAClB;;AAKN,AAAgB,eAAD,CAAC,KAAK,CAAA;EACjB,SAAS,EAAC,IAAK;EACf,MAAM,EAAC,GAAI;EACX,KAAK,EAAC,gBAAI;EACV,SAAS,EAAC,KAAM,GACnB;;AAED,AAAgC,eAAjB,CAAC,EAAE,YAAa,CAAA,CAAC,EAAC;EAC7B,WAAW,EAAE,IAAK,GACrB;;AAED,AAAgC,eAAjB,CAAC,EAAE,YAAa,CAAA,CAAC,EAAC;EAC7B,WAAW,EAAE,SAAU,GAC1B;;AAED,eAAe,CAAA;EACX,GAAG,EAAC,CAAE;EAAE,MAAM,EAAC,CAAE;EAAE,IAAI,EAAC,CAAE;EAAE,KAAK,EAAC,CAAE;EAAE,OAAO,EAAC,GAAI;EAAE,gBAAgB,EAAC,KAAM;EAAE,QAAQ,EAAC,QAAS;EAAE,OAAO,EAAC,CAAE,GAC9G;;AAEA,MAAM,CAAN,MAAM,MAAM,SAAS,EAAE,KAAK;EACxB,AAAgC,eAAjB,CAAC,EAAE,YAAa,CAAA,CAAC;EAChC,AAAgC,eAAjB,CAAC,EAAE,YAAa,CAAA,CAAC;EAChC,AAAgC,eAAjB,CAAC,EAAE,YAAa,CAAA,CAAC;EAChC,AAAgC,eAAjB,CAAC,EAAE,YAAa,CAAA,CAAC,EAAC;IAC7B,OAAO,EAAE,IAAK,GACjB","file":"app-bundle.js","sourcesContent":["\nimport {RouterConfiguration, Router} from 'aurelia-router';\n\nexport class App {\n router : Router;\n\n configureRouter(config: RouterConfiguration, router: Router): void {\n    this.router = router;\n    config.title = 'Aurelia';\n    config.map([\n\n      //deck screens - obj: locate  a deck to play with\n      { route: ['', 'decks'], title:'Your Decks',   name: 'decks',       moduleId: 'deck/index', nav:true},\n      //{ route: ['browse'],    name: 'browse',      moduleId: 'deck/browse' },\n      //{ route: ['search'],    name: 'search',      moduleId: 'deck/search' },\n\n\n      // required a deck to be selected\n      { route: 'play/:id',         name: 'play',       moduleId: 'game/play' },\n      { route: 'review',           name: 'review',     moduleId: 'game/review' },\n      { route: 'edit',             name: 'edit',       moduleId: 'deck/edit' },\n      { route: 'import',           name: 'import',       moduleId: 'deck/import' }\n      //temp\n      //{ route: 'files/*path',      name: 'files',      moduleId: 'files/index',   href:'#files',   nav: 0 }\n     \n    ]);\n}\n\n\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n//import $ from 'jquery';\n\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources')\n    .plugin('aurelia-hammer')\n    .plugin('aurelia-validation')\n    .plugin('aurelia-materialize-bridge', b => b.useAll());\n    \n    //.plugin('./resources');\n    //.plugin('aurelia-converters');\n    //.plugin('aurelia-mobile-plugin');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","\r\nexport enum CardResponse {\r\n    Undefined = 0,\r\n    Right = 1,\r\n    Wrong = 2,\r\n    Pass = 3\r\n}","\r\nimport { CardResponse } from './cardresponse'\r\n\r\nexport class Card{\r\n\r\n    //card state\r\n    isFlagged : boolean = false;   \r\n    isAnswerVisible : boolean = false;\r\n\r\n    response : CardResponse = CardResponse.Undefined; \r\n    //aggregate state\r\n    rightCount : number = 0;\r\n    wrongCount : number = 0;\r\n    skipCount : number = 0;\r\n\r\n    //card properties\r\n\r\n    /*** unique card id */\r\n    //( id )\r\n\r\n    /*** card number in the deck */\r\n    number: number;        \r\n\r\n    type : string;  //assume q&a card for now\r\n\r\n    constructor(public id: string, public question : string, public answer : string){\r\n    }\r\n\r\n    static Create(){\r\n        return new Card('','','');\r\n    }\r\n\r\n    public mark( value : CardResponse){\r\n        if ( value == null || value == undefined)\r\n            return;\r\n    \r\n        switch( value ){\r\n            case CardResponse.Undefined:\r\n                return;                \r\n\r\n            case CardResponse.Right:               \r\n                this.rightCount++; \r\n               break;\r\n \r\n            case CardResponse.Wrong:\r\n                this.wrongCount++;\r\n\r\n            case CardResponse.Pass:\r\n                this.skipCount++;\r\n\r\n            break;\r\n        }\r\n\r\n        this.response = value;\r\n    }\r\n}","import {Card} from '../cards/card'\r\n\r\nexport class Deck {\r\n    topCard : Card;\r\n    cardIx : number;\r\n    cards : Card[];\r\n\r\n    constructor(public id : string, public name: string, public description : string){        \r\n        this.cardIx = 0;\r\n        this.cards = new Array<Card>();\r\n    }\r\n\r\n    static Create() : Deck {\r\n        return new Deck('','','',);\r\n    }\r\n    \r\n    get cardCount():number {\r\n        return this.cards.length;\r\n    }\r\n\r\n    public addCards(cards : Card[]){\r\n        \r\n        let _cardCount = this.cardCount;\r\n\r\n        for( var i = 0; i < cards.length; i++){\r\n            cards[i].number = _cardCount + i + 1;\r\n            this.cards.push( cards[i] );\r\n        }\r\n    }\r\n\r\n    public addCard( card : Card){        \r\n        card.number = this.cardCount + 1;\r\n        this.cards.push( card );\r\n    }\r\n\r\n    public removeCard( card : Card ){\r\n        this.cards.splice(card.number-1 , 1);\r\n        this.renumberCards();\r\n    }\r\n\r\n    renumberCards(){\r\n        for(var i = 0; i < this.cards.length; i++)\r\n            this.cards[i].number = i + 1;\r\n    }\r\n\r\n    previous(){\r\n        this.cardIx = this.cardIx - 1;\r\n        if ( this.cardIx < 0 ) this.cardIx = 0;\r\n        return this.topCard = this.cards[ this.cardIx ];    \r\n    }\r\n\r\n    next(){\r\n        this.cardIx = ( this.cardIx + 1 );\r\n        if ( this.cardIx >=  this.cardCount ) this.cardIx = this.cardCount - 1;\r\n        return this.topCard = this.cards[ this.cardIx ];\r\n    } \r\n\r\n    // can implement diff strategy for previous, next\r\n    // maybe queues for previous\r\n\r\n    shuffle(){\r\n        //algorithm from http://stackoverflow.com/a/25984542\r\n        function _shuffle(a,b,c,d){//array,placeholder,placeholder,placeholder\r\n            c=a.length;while(c)b=Math.random()*(--c+1)|0,d=a[c],a[c]=a[b],a[b]=d\r\n        }\r\n\r\n        _shuffle( this.cards, null, null, null);\r\n    }\r\n\r\n}\r\n","import {Deck} from './../decks/deck';\r\n\r\nexport class State{\r\n\r\n    public items : any;\r\n\r\n    public deck : Deck;\r\n    public cardNumber : number;\r\n\r\n    constructor(){\r\n        this.items = { };\r\n    }\r\n}","\r\nimport {Card} from './../cards/card'\r\nimport {Deck} from './deck'\r\n\r\nexport class DeckFactory{\r\n\r\n    createSampleDeck(){\r\n\r\n        var deck = new Deck(\"D1\", 'Easy Questions', 'These are questions a robot could answer.');\r\n\r\n        var cards = new Array<Card>();\r\n        cards.push( new Card(\"C1\",\"How many fingers does a human have?\", \"Humans have 10 fingers\") );\r\n        cards.push( new Card(\"C2\",\"How many fingers and toes does a human have?\", \"A human has 10 fingers and 10 toes for a total of 20 digits.\") );\r\n        cards.push( new Card(\"C3\",\"When does the moon meet the sky?\", \"When the sun hides for a moment.\") );\r\n\r\n        deck.addCards( cards );\r\n\r\n        return deck;\r\n    }\r\n}\r\n\r\n/*\r\nexport class DeckMaker?\r\n\r\nexport class Shoe{\r\n    decks : Deck[]\r\n\r\n    constructor(){\r\n        this.decks = new Array<Deck>();\r\n    }\r\n}\r\n*/","export class DeckHeader {\r\n\r\n    id : string;\r\n    name : string;\r\n    description : string;\r\n    cardCount : number;\r\n\r\n}\r\n","//storage\r\nexport {State} from './state/state';\r\n\r\n//cards\r\nexport {Card} from './cards/card';\r\nexport {CardResponse} from './cards/cardresponse';\r\n\r\n//decks\r\nexport {Deck} from './decks/deck';\r\nexport {DeckFactory} from './decks/deckfactory';\r\nexport {DeckHeader} from './decks/deckheader';\r\n\r\n","import {\r\n  ValidationRenderer,\r\n  RenderInstruction,\r\n  ValidationError\r\n} from 'aurelia-validation';\r\n\r\nexport class BootstrapFormRenderer {\r\n  render(instruction) {\r\n    for (let { error, elements } of instruction.unrender) {\r\n      for (let element of elements) {\r\n        this.remove(element, error);\r\n      }\r\n    }\r\n\r\n    for (let { error, elements } of instruction.render) {\r\n      for (let element of elements) {\r\n        this.add(element, error);\r\n      }\r\n    }\r\n  }\r\n\r\n  add(element, error) {\r\n    const formGroup = element.closest('.form-group');\r\n    if (!formGroup) {\r\n      return;\r\n    }\r\n\r\n    // add the has-error class to the enclosing form-group div\r\n    formGroup.classList.add('has-error');\r\n\r\n    // add help-block\r\n    const message = document.createElement('span');\r\n    message.className = 'help-block validation-message';\r\n    message.textContent = error.message;\r\n    message.id = `validation-message-${error.id}`;\r\n    formGroup.appendChild(message);\r\n  }\r\n\r\n  remove(element, error) {\r\n    const formGroup = element.closest('.form-group');\r\n    if (!formGroup) {\r\n      return;\r\n    }\r\n\r\n    // remove help-block\r\n    const message = formGroup.querySelector(`#validation-message-${error.id}`);\r\n    if (message) {\r\n      formGroup.removeChild(message);\r\n\r\n      // remove the has-error class from the enclosing form-group div\r\n      if (formGroup.querySelectorAll('.help-block.validation-message').length === 0) {\r\n        formGroup.classList.remove('has-error');\r\n      }\r\n    }\r\n  }\r\n}","\r\nlet id = 0;\r\n/*** generate a unique id */\r\nfunction getId() : number {\r\n  return ++id;\r\n}\r\n\r\n/*** Creates a unique id for identification purposes. */\r\nvar getUid = function () {    \r\n    var delim = \"-\";\r\n    function S4() {\r\n        return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    }\r\n    return (S4() + S4() + delim + S4() + delim + S4() + delim + S4() + delim + S4() + S4() + S4());\r\n};\r\n\r\n/*** generate a random number between 1 and 45 */\r\nfunction getCardCount(){\r\n  return Math.floor(Math.random() * 45) + 1;\r\n}\r\n\r\n/*** generate random card data */\r\nfunction getCardData() : any{\r\n  return {\r\n     id : getUid(),\r\n     question : \"This is a dummy question\",\r\n     answer : \"This is an answer\"\r\n  };\r\n}\r\n\r\n\r\nlet deckHeaders = [];\r\nlet decks = [];\r\nloadDecks();\r\n\r\nfunction saveDecks(){\r\n    localStorage.setItem('decks', JSON.stringify(decks));\r\n    localStorage.setItem('deckheaders', JSON.stringify(deckHeaders));\r\n}\r\n\r\nfunction loadDecks(){\r\n    let deck_string = localStorage.getItem('decks')\r\n    let deckheaders_string = localStorage.getItem('deckheaders')\r\n\r\n    if ( deck_string !== null ){\r\n        decks = JSON.parse(deck_string);\r\n    } else {\r\n        decks = [\r\n            { \r\n                id : getUid(),\r\n                name:'Easy Questions',\r\n                description: 'These are questions a robot could answer.',\r\n                cards :\r\n                    [ \r\n                        {\r\n                            id:getId(),\r\n                            question : \"How many fingers does a human have?\",\r\n                            answer : \"Humans have 10 fingers\",\r\n                            number : 1\r\n                        },\r\n                        {\r\n                            id:getId(),\r\n                            question : \"How many fingers and toes does a human have?\",\r\n                            answer : \"A human has 10 fingers and 10 toes for a total of 20 digits.\",\r\n                            number : 2\r\n                        },\r\n                        {\r\n                            id:getId(),\r\n                            question : \"When does the moon meet the sky?\",\r\n                            answer : \"When the sun hides for a moment.\",\r\n                            number : 3\r\n                        }\r\n                    ]        \r\n            },\r\n\r\n            { \r\n                id : getUid(),\r\n                name:'More Questions',\r\n                description: 'These are questions a human could answer.',\r\n                cards :\r\n                    [ \r\n                        {\r\n                            id:getId(),\r\n                            question : \"What is the square root of negative 1?\",\r\n                            answer : \"sqrt(-1) = i\",\r\n                            number : 1\r\n                        },\r\n                        {\r\n                            id:getId(),\r\n                            question : \"How many robots are there?\",\r\n                            answer : \"How would I know?\",\r\n                            number : 2\r\n                        },\r\n                        {\r\n                            id:getId(),\r\n                            question : \"Who won the superbowl in 1973.\",\r\n                            answer : \"I dont know.\",\r\n                            number : 3\r\n                        }\r\n                    ]        \r\n            }\r\n        ];\r\n    }\r\n\r\n    if ( deckheaders_string !== null ){\r\n        deckHeaders = JSON.parse(deckheaders_string);\r\n    } else {\r\n\r\n\r\n        deckHeaders = [\r\n        {\r\n            id : getUid(),\r\n            name : \"Raining Cats and Dogs\",\r\n            description : \"My Mum say she likes all the same things that I do.\",\r\n            cardCount : getCardCount()\r\n        },\r\n        {\r\n            id : getUid(),\r\n            name : \"Greased Lightning\",\r\n            description : \"Abstraction is often one floor above you.\",\r\n            cardCount : getCardCount()\r\n        },\r\n        {\r\n            id : getUid(),\r\n            name : \"Back to Square One\",\r\n            description : \"Please wait outside of the house.\",\r\n            cardCount : getCardCount()\r\n        },\r\n        {\r\n            id : getUid(),\r\n            name : \"Fish Out Of Water\",\r\n            description : \"Wednesday is hump day, has anyone asked the camel if he’s happy about it?\",\r\n            cardCount : getCardCount()\r\n        },\r\n        {\r\n            id : getUid(),\r\n            name : \"Wild Goose Chase\",\r\n            description : \"He turned in the research paper on Friday.\",\r\n            cardCount : getCardCount()\r\n        },\r\n        {\r\n            id : getUid(),\r\n            name : \"When the Rubber Hits the Road\",\r\n            description : \"She folded her handkerchief neatly.\",\r\n            cardCount : getCardCount()\r\n        },\r\n        {\r\n            id : getUid(),\r\n            name : \"Don't Count Your Chickens Before They Hatch\",\r\n            description : \"Italy is my favorite country.\",\r\n            cardCount : getCardCount()\r\n        }\r\n        ];\r\n    }\r\n\r\n    saveDecks();\r\n}","import {Card, Deck, DeckHeader} from './../objects/allobjects'\r\nimport './deck-storage';\r\nimport 'underscore';\r\n\r\nlet latency = 200;\r\nlet id = 0;\r\n\r\n\r\n/*** created to : search for remote desks, save deck to local stores */\r\nexport class DeckStoreAPI {\r\n  isRequesting = false;\r\n  \r\n  /*** search for decks */\r\n  search( searchText : string ) : Promise<DeckHeader[]>{   \r\n    this.isRequesting = true;\r\n    return new Promise(resolve => {\r\n      setTimeout(() => {\r\n        let results = deckHeaders;\r\n       \r\n        if ( !!searchText){ \r\n          let searchTextLower = searchText.toLowerCase();\r\n          results = results\r\n              .filter( x => { return x.name.toLowerCase().indexOf( searchTextLower ) > -1 \r\n                                  || x.description.toLowerCase().indexOf( searchTextLower ) > -1 });\r\n        }\r\n\r\n        results.map(x =>  { return <DeckHeader>{\r\n          id:x.id,\r\n          name : x.name,\r\n          description :  x.description,\r\n          cardCount : x.cardCount\r\n        }});\r\n        resolve(results);\r\n        this.isRequesting = false;\r\n      }, latency);\r\n    });\r\n  }\r\n\r\n  /*** search locally for my decks */\r\n  searchLocal( searchText : string ) : Promise<DeckHeader[]>{   \r\n    this.isRequesting = true;\r\n    return new Promise(resolve => {\r\n      setTimeout(() => {\r\n        let results = decks;\r\n\r\n\r\n        if ( !!searchText){ \r\n          let searchTextLower = searchText.toLowerCase();\r\n          results = results\r\n              .filter( x => { return x.name.toLowerCase().indexOf( searchTextLower ) > -1 \r\n                                  || x.description.toLowerCase().indexOf( searchTextLower ) > -1 });\r\n        }\r\n\r\n        results = results        \r\n        .map(x =>  { return <DeckHeader>{\r\n          id:x.id,\r\n          name : x.name,\r\n          description :  x.description,\r\n          cardCount : x.cards.length\r\n        }});\r\n        resolve(results);\r\n        this.isRequesting = false;\r\n      }, latency);\r\n    });\r\n  }\r\n\r\n  /*** get a deck from the local cache */\r\n  getLocalDeck(id : string) : Promise<Deck>{\r\n    this.isRequesting = true;\r\n    return new Promise(resolve => {\r\n      setTimeout(() => {\r\n        \r\n        //clone deck\r\n        let deck  = decks.filter(x => x.id == id)[0];       \r\n        let _deck = Object.assign( Deck.Create(), JSON.parse(JSON.stringify(deck)));\r\n\r\n        //clone cards\r\n        let cards = new Array<Card>();\r\n        for( var ix = 0; ix < deck.cards.length; ix++ ){\r\n          cards.push( Object.assign( Card.Create(), deck.cards[ix] ));\r\n        }\r\n        _deck.cards = cards;\r\n\r\n        resolve( _deck );\r\n        this.isRequesting = false;\r\n\r\n      }, latency);\r\n    });\r\n  }\r\n\r\n  /*** get a deck from the server */\r\n  getDeck(id : string) : Promise<Deck>{\r\n    this.isRequesting = true;\r\n    return new Promise(resolve => {\r\n      setTimeout(() => {\r\n        let found = deckHeaders.filter(x => x.id == id)[0];       \r\n        \r\n        let deck = new Deck( found.id, found.name, found.description);\r\n        for( let i = 0; i < found.cardCount; i++){\r\n          var cd = getCardData();\r\n          deck.addCard( new Card( cd.id, cd.question, cd.answer ) );\r\n        }\r\n         \r\n        resolve( deck );\r\n        this.isRequesting = false;\r\n      }, latency);\r\n    });\r\n  }\r\n\r\n  /*** save a deck to local decks cache && save it to server */\r\n  saveDeck(deck : Deck){\r\n    this.isRequesting = true;\r\n    return new Promise(resolve => {\r\n      setTimeout(() => {\r\n        let instance = JSON.parse(JSON.stringify(deck));\r\n\r\n        //save it local\r\n        let found = decks.filter(x => x.id == deck.id)[0];\r\n\r\n        if(found){\r\n          let index = decks.indexOf(found);\r\n          decks[index] = instance;\r\n        }else{\r\n          instance.id = getUid();\r\n          decks.push(instance);\r\n        }\r\n        saveDecks();\r\n\r\n        //save it to server ( simulated ), it its not yours, clone it?\r\n        let sFound = deckHeaders.filter(x => x.id == deck.id)[0];\r\n        if(sFound){\r\n          sFound.name = instance.name;\r\n          sFound.decription = instance.description;\r\n          sFound.cardCount = instance.cards.length; \r\n        }else{\r\n          let dhInstance = {\r\n            id : getUid(),\r\n            name : instance.name,\r\n            description : instance.description,\r\n            cardCount : instance.cards.length\r\n          };\r\n          deckHeaders.push(dhInstance);         \r\n        }\r\n\r\n        saveDecks();\r\n        this.isRequesting = false;\r\n\r\n        resolve(instance);\r\n      }, latency);\r\n    });\r\n  }\r\n\r\n  /*** Delete a deck from local & server */\r\n  deleteDeck(deck : Deck){\r\n    this.isRequesting = true;\r\n    return new Promise(resolve => {\r\n      setTimeout(() => {\r\n     \r\n        //remove it local\r\n        let index = _.findIndex(decks, x => x.id == deck.id )\r\n        decks.splice( index, 1);        \r\n\r\n        //remove iton the server to server ( simulated ), if its not yours, do nothing?\r\n        let sIndex = _.findIndex(deckHeaders, x => x.id == deck.id );\r\n        if(sIndex > 0){\r\n          deckHeaders.splice(sIndex,1);\r\n        }\r\n\r\n        saveDecks();\r\n        this.isRequesting = false;\r\n\r\n        resolve();\r\n      }, latency);\r\n    });\r\n  }\r\n\r\n  //? save to server?\r\n}\r\n","\nimport {inject} from 'aurelia-framework';\nimport { Card, Deck, DeckFactory, State } from './../objects/allobjects'\nimport {Router} from 'aurelia-router';\nimport {BootstrapFormRenderer} from './../resources/validation/bootstrap-form-renderer';\nimport {DeckStoreAPI} from './../storage/deck-store-api';\n\nimport {\n  ValidationControllerFactory,\n  ValidationController,\n  ValidationRules\n} from 'aurelia-validation';\n\n\n@inject(State, Router, ValidationControllerFactory, DeckStoreAPI)\nexport class Edit {\n  deck : Deck;\n  selectedCard : Number;\n\n  /* new card properties */\n  new_question : string;\n  new_answer : string;\n\n  constructor(private state: State,\n              private router: Router,\n              private validationControllerFactory : ValidationControllerFactory,\n              private store : DeckStoreAPI)\n              {\n\n    if ( state.deck == null){\n      this.router.navigateToRoute('decks');\n    }\n  \n    this.deck =  state.deck;\n    this.startValidation();   \n  }\n\n  /*** save deck to storage */\n  saveDeck(){\n    this.store.saveDeck( this.deck );\n\n    alert(\"Deck Saved\");\n  }\n\n  /*** route to index */\n  goToIndex(){\n    this.router.navigateBack();\n  }\n  \n  saveNewCard(){\n    this.controller.validate({ object: this })\n      .then(\n        (err) => {\n          if ( err.length == 0 ){\n            var card = new Card( null, this.new_question, this.new_answer);\n            this.deck.addCard( card );\n            \n            alert(\"Card Added\");\n\n            this.new_question =\n              this.new_answer =  \"\";\n\n            // this.new_question.focus();\n          }\n      });\n  }\n\n  remove(card){\n    this.deck.removeCard( card );\n  }\n\n  controller : any = null;\n  startValidation(){\n       this.controller = this.validationControllerFactory.createForCurrentScope();\n       this.controller.addRenderer(new BootstrapFormRenderer());\n      \n          \n        const rules = ValidationRules\n                  .ensure(\"new_question\")     \n                  .displayName(\"Question\")   \n                      .minLength(5).maxLength(256).required()         \n                       \n                  .ensure(\"new_answer\")    \n                  .displayName(\"Answer\")  \n                      .minLength(5).maxLength(256).required()        \n                      .rules;\n\n        this.controller.addObject(this, rules);\n\n  }\n        \n}\n","import * as _ from 'underscore';\r\n\r\nexport class UIMessage{\r\n    message : string;\r\n    messageType : string;\r\n}\r\n\r\nexport class UIResult{\r\n    content : any;\r\n    messages : Array<UIMessage>;\r\n\r\n    static Create( content? : any, message? : any ) : UIResult    {\r\n\r\n        var res = new UIResult();\r\n\r\n        if ( typeof(message) == 'UIMessage'){\r\n           res.messages = new Array<UIMessage>();\r\n           res.messages.push( message ); \r\n        }\r\n\r\n        if ( typeof(message) == 'Array' && typeof(message[0]) == 'UIMessage'){\r\n            res.messages = message;\r\n        }\r\n\r\n        res.content = content;\r\n\r\n        return res;\r\n    }\r\n}\r\n\r\nexport class Result{\r\n    /*** message type */\r\n\r\n    static Success( content?: any, message? : string) : Result{\r\n        var res = new Result();\r\n        res.success = true;\r\n        res.content = content;\r\n        res.message = null;        \r\n        return res;\r\n    }\r\n\r\n    static Info( content?: any, message? : string ) : Result{\r\n        var res = new Result();\r\n        res.success = true;\r\n        res.message = message;\r\n        res.content = content;\r\n        return res;\r\n    }\r\n\r\n    static Fail( message : string ){\r\n        var res = new Result();\r\n        res.success = false;\r\n        res.message = message;\r\n        return res;\r\n    }\r\n\r\n    success : boolean;\r\n    message : string;\r\n    content : any;   \r\n}\r\n\r\n\r\nexport class QandA{\r\n    Q : string;\r\n    A : string;\r\n\r\n    constructor( q : string, a: string ){\r\n        this.Q = q;\r\n        this.A = a;\r\n    }\r\n}\r\n\r\nexport class QuestionFormulatingEngine{\r\n        \r\n    public CreateQACards( data : any[], template : any, options : any) : UIResult\r\n    {\r\n        //handle null\r\n        // if data == null\r\n        // if data.length == 0\r\n\r\n        var results = new Array<QandA>(); \r\n        var messages = new Array<UIMessage>();\r\n        //no groups -> 1 question per row;\r\n            \r\n        let q = template.q as string;\r\n        //expected format : \"Lorem {i} dolor al {b}\"\r\n    \r\n        let a = template.a as string ;\r\n        //expected format : \"Lorem {i} dolor al {b}\"\r\n\r\n        // if multi-row option then combine mulitple row data into one row\r\n        if ( options && options.multi ){\r\n\r\n            let stackSize = 1;\r\n            let stacks = new Array<Array<number>>();\r\n            if ( typeof(options.multi)  == 'number' ){\r\n                stacks = QuestionFormulatingEngine.GenerateIndexArrays( data.length, options.multi);\r\n            }\r\n            if ( options.multi instanceof Object ){\r\n                stacks = options.multi;                \r\n            }\r\n\r\n            //rearrange / stack rows \r\n            let stackedData = [];\r\n            for( let indexes of stacks )\r\n            {                \r\n                let dataStackRow = {};   \r\n                for ( let prop in data[0]){             \r\n                    dataStackRow[ prop ] = QuestionFormulatingEngine.JoinWords( \r\n                            _.pluck( data.filter( (el, ix) => { \r\n                                return _.contains( indexes, ix );\r\n                            } ), prop) );           \r\n                }                \r\n                stackedData.push( dataStackRow); \r\n            }\r\n         \r\n            data = stackedData;\r\n        }\r\n        \r\n        for( let row of data ){\r\n\r\n            //get question\r\n            let q_res = this.fillTemplate( row, q );\r\n\r\n            //get answer\r\n            let a_res = this.fillTemplate( row, a );\r\n            \r\n            if ( q_res.success && a_res.success){\r\n                results.push( new QandA( q_res.content, a_res.content ));\r\n            }\r\n            \r\n            if ( q_res.message )\r\n                messages.push( new UIMessage())\r\n        }\r\n\r\n        return UIResult.Create( results, messages );\r\n    }\r\n\r\n\r\n    public CreateCards( data : any[], template : any, options? : any) : UIResult{\r\n        \r\n        let isGroup = (options && options.group);\r\n        //expected format : \"i, b\" \r\n                \r\n        var results = new Array<QandA>(); \r\n        var messages = new Array<UIMessage>();\r\n        //no groups -> 1 question per row;\r\n\r\n        if ( !isGroup ){\r\n            return this.CreateQACards( data, template, options );            \r\n        }\r\n\r\n        //else do grouping logic\r\n            \r\n        let data_keys = _.allKeys( data[0] );\r\n\r\n        // group parts\r\n\r\n        let g = options.group.toString();\r\n        var g_props = _.map( g.split(','), str => str.toString().trim().substring(1, str.toString().length-1) ); //trim '{}'\r\n        \r\n        // g_props :['a','b','c']\r\n        // row     : {a:\"foo\", b:\"bar\", c:'baz'};\r\n\r\n        let groups =\r\n            _.groupBy(\r\n                data,\r\n                function(row) {\r\n                    return  _.reduce( \r\n                        g_props,\r\n                        function(memo, el){\r\n                            var i_el = el.toString()\r\n                            return memo + row[i_el] + '-'; },\r\n                        ''\r\n                    );\r\n                }\r\n            );\r\n\r\n        let group_rows = [];\r\n\r\n        \r\n        //create question, answers for each group -> concat all non-group properties\r\n        for( let group_key in groups){\r\n\r\n            // concat non-group properties => make one eff\r\n            let group = groups[group_key];\r\n            let grouped_row = {};\r\n\r\n            //for all props\r\n            for ( let prop of data_keys){\r\n                if ( _.contains(g_props, prop)){\r\n                    grouped_row[prop] = group[0][prop];\r\n                }else{\r\n                    grouped_row[prop] = QuestionFormulatingEngine.JoinWords( _.pluck( group, prop).sort() );\r\n                }\r\n            }\r\n\r\n            group_rows.push( grouped_row );\r\n        }        \r\n  \r\n        return this.CreateQACards( group_rows, template, options);\r\n\r\n    }\r\n\r\n    /*** created to fill template with row data \r\n     *    returns a filled template\r\n     *    replace( rowdata : { k:v, k2:v2 } , template : string ) \r\n     * \r\n     * @rowdata    { k:v, k2:v2 }\r\n     * @template   \"Lorem {i} dolor al {b}\"\r\n     **/    \r\n    fillTemplate( rowData : {}, template: string) : Result {\r\n\r\n        let matches = template.match(/\\{[^{^}]+\\}/g);\r\n        \r\n        //no matching fill-ins\r\n        if (matches.length == 0)\r\n            return Result.Info(\"There are no parameters in the template\", template);\r\n        \r\n        // replace matches with prop values\r\n        for( let match of matches ){\r\n            let match_text = match.substring(1,match.length-1); //remove '{', '}'\r\n            if ( !rowData[match_text] ){\r\n                return Result.Fail('The template placeholder \"' + match + '\" is not a property in the JSON schema');\r\n            }            \r\n\r\n            template = template.replace( match, rowData[match_text]);\r\n        }    \r\n\r\n        return Result.Success(template);\r\n    }\r\n\r\n      \r\n    static JoinWords( values : Array<string> ) : string{\r\n        let strResult = '';\r\n\r\n        if ( values.length == 0)\r\n            return '';\r\n\r\n        if ( values.length == 1)\r\n            return values[0];\r\n\r\n        for( let ix = 0; ix < values.length; ix++){\r\n            if ( ix == 0 )\r\n                strResult += values[ix]\r\n            else if ( ix == values.length -1 )\r\n                strResult += \" and \" + values[ix];\r\n            else\r\n                strResult += \", \" + values[ix];\r\n        }\r\n\r\n        return strResult;\r\n    }\r\n\r\n   /*** given a number of cards c,  and cards per stack s, generates floor(c/s) arrays that\r\n    * contain random selectoins of indecies */\r\n    static GenerateIndexArrays( numberOfCards : number, stackSize : number  ) : Array<Array<number>>{\r\n\r\n        let numStacks = Math.floor(numberOfCards / stackSize) || 1 ;//minimum number of stacks is 1\r\n  \r\n        let availableStacks = new Array<Array<number>>();\r\n        let fullStacks = new Array<Array<number>>();\r\n\r\n        for( let i = 0; i < numStacks; i++ )\r\n            availableStacks[i] = new Array<number>();\r\n\r\n        for ( let i = 0; i < numberOfCards; i++){\r\n            \r\n            if ( availableStacks.length == 0){\r\n                //refill avail stacks from full if no stacks left\r\n                availableStacks = fullStacks.splice(0, fullStacks.length-1);\r\n            }\r\n\r\n            let r = Math.floor(Math.random() * (availableStacks.length));            \r\n            availableStacks[r].push( i );\r\n            if( availableStacks[r].length >= stackSize )\r\n                fullStacks.push(availableStacks.splice(r,1)[0]);\r\n        }\r\n\r\n        return availableStacks.concat(fullStacks);\r\n    }\r\n\r\n}\r\n","\nimport {inject} from 'aurelia-framework';\nimport {Card, Deck, DeckFactory, State } from './../objects/allobjects'\nimport {Router} from 'aurelia-router';\nimport {BootstrapFormRenderer} from './../resources/validation/bootstrap-form-renderer';\nimport {DeckStoreAPI} from './../storage/deck-store-api';\nimport 'Papa';\n\nimport  { QuestionFormulatingEngine, QandA, Result, UIResult, UIMessage}\n  from './../lib/question-formulator';\n\nimport {\n  ValidationControllerFactory,\n  ValidationController,\n  ValidationRules\n} from 'aurelia-validation';\n\n\n@inject(State, Router, ValidationControllerFactory, DeckStoreAPI)\nexport class Import {\n  deck : Deck;  \n\n\n  /* import data */\n  importFormat : string = 'json';\n  importContent : string = 'table';\n  importText : string;\n  isDataRowBased : boolean;\n\n\n\n  csv_delimiter : string = ',';\n  question_prop : string = 'question';\n  answer_prop : string = 'answer';\n\n  json_props : any[];\n\n  /*** cards to create */\n  cards : Card[];\n  importTemplates : any[] = [];\n\n  constructor(private state: State,\n              private router: Router,\n              private validationControllerFactory : ValidationControllerFactory,\n              private store : DeckStoreAPI)\n              {\n\n    if ( state.deck == null){\n      this.router.navigateToRoute('decks');\n    }\n  \n    this.deck =  state.deck;\n    this.startValidation();  \n\n    \n    this.cards = new Array<Card>(); \n  }\n\n  /*** import => parse tabular data */\n  importTable(){\n    //parse table data\n  }\n\n  /*** save new cards to deck */\n  saveDeck(){\n    this.store.saveDeck( this.deck );\n  }\n\n  saveNewCard(){\n    this.controller.validate({ object: this })\n      .then(\n        (err) => {\n          if ( err.length == 0 ){\n  \n\n          }\n      });\n  }\n\n  controller : any = null;\n  startValidation(){\n       this.controller = this.validationControllerFactory.createForCurrentScope();\n       this.controller.addRenderer(new BootstrapFormRenderer());\n    \n          \n        const rules = ValidationRules\n                  .ensure(\"new_question\")     \n                  .displayName(\"Question\")   \n                      .minLength(5).maxLength(256).required()         \n                       \n                  .ensure(\"new_answer\")    \n                  .displayName(\"Answer\")  \n                      .minLength(5).maxLength(256).required()        \n                      .rules;\n\n        this.controller.addObject(this, rules);\n\n  }\n\n  importText_Change(){\n    this.enableCreateCards = false;\n  }\n\n  parsedData : any[];\n  enableCreateCards : boolean = false;\n\n  /*** convert data into json format */\n  parseData(){\n    let jsonData = [];\n    let errors = [];\n    \n    if ( this.importFormat == \"json\"){     \n        try{\n          jsonData = JSON.parse( this.importText);\n        }catch(ex){\n          errors.push( ex.toString() );\n        }\n    } else if ( this.importFormat == \"csv\"){\n        let parserRes = Papa.parse( this.importText, { header: true })\n\n        if ( parserRes.errors.length > 0){\n          errors.push( parserRes.errors );\n        } else {\n          jsonData = parserRes.data;\n        }\n    }\n\n    if ( errors.length > 0){\n      this.enableCreateCards = false;\n      alert( errors.join(\"\\n\"));\n      return;\n    }\n\n    this.parsedData = jsonData;\n    this.enableCreateCards = true;\n    console.log( \"Parsed Data\");\n  }\n\n\n  csvJSON(csv){\n\n      var lines=csv.split(\"\\n\");\n\n      var result = [];\n\n      var headers=lines[0].split(\",\");\n\n      for(var i=1;i<lines.length;i++){\n\n          var obj = {};\n          var currentline=lines[i].split(\",\");\n\n          for(var j=0;j<headers.length;j++){\n              obj[headers[j]] = currentline[j];\n          }\n\n          result.push(obj);\n\n      }\n\n      //return result; //JavaScript object\n      return JSON.stringify(result); //JSON\n  }\n\n\n  pasteImport_OnPaste($event){\n\n     let  plain = $event.clipboardData.getData('text/plain').trim();\n\n     plain = plain.replace('\\r\\n','\\n');\n\n     let objects = \n      this.isDataRowBased ? \n       this.textToObjectsTranspose( plain ) : \n       this.textToObjects( plain );\n\n     this.importText = JSON.stringify( objects, null, ' ');\n  }\n\n  \n textToObjects(stringData){\n    var objects = [];\n    //split into rows\n    var rows = stringData.split('\\n');\n\n    //Make columns\n    let columns = rows[0].split('\\t');\n\n    //Note how we start at rowNr = 1, because 0 is the column row\n    for (var rowNr = 1; rowNr < rows.length; rowNr++) {\n        var o = {};\n        var data = rows[rowNr].split('\\t');\n\n        //Loop through all the data\n        for (var cellNr = 0; cellNr < data.length; cellNr++) {\n            o[columns[cellNr]] = data[cellNr].trim();\n        }\n\n        objects.push(o);\n    }\n\n    return objects;\n  }\n\n\n  textToObjectsTranspose( stringData : string){\n    let objects = [];\n    //split into rows\n    var rows = stringData.split('\\n');\n\n    //Make columns\n    let columns = rows[0].split('\\t');\n\n    // create col_n - 1 objects\n    for ( var colNum = 0; colNum < columns.length-1; colNum++){\n      objects.push({});\n    }\n\n    for (var rowNbr = 0; rowNbr < rows.length; rowNbr++) {\n        var row = rows[rowNbr].split('\\t');\n        let prop = row[0].trim();\n\n        //Loop through all the property data\n        for (var cellNbr = 1; cellNbr < row.length; cellNbr++) {\n            objects[cellNbr-1][prop] = row[cellNbr].trim();\n        }\n    }\n\n    return objects;\n  }\n        \n  /*** sapmle data */\n  shouldShowSampleData : boolean = false;\n  importTextTempData : string;\n  importTemplatesTempData : any[];\n  showSampleDataChange($event){\n\n    let isChecked = $event.target.checked;\n\n    if ( isChecked ) {\n      //store text, template values\n      this.importTextTempData = this.importText; \n      this.importTemplatesTempData = this.importTemplates;\n      this.tryShowSampleData();\n    } else{\n\n      //restore original data\n      this.importText = this.importTextTempData;       \n      this.importTemplates = this.importTemplatesTempData;\n    }\n\n  }\n\n  tryShowSampleData(){\n    if ( this.shouldShowSampleData ){\n      let lookup = this.importFormat + '-' + this.importContent;\n      this.importText = this.sampleData[ lookup ];\n\n      let templatesLookup = this.importFormat + '-' + this.importContent + '-' + 'templates';\n      this.importTemplates = this.sampleData[templatesLookup] || [];\n    }\n  }\n\n  addTemplate(){\n    this.importTemplates.splice(0,0, {q:'',a:'',filter:'', group:'', multi:''});\n  }\n\n  removeTemplate(t){\n    let ix = _.indexOf( this.importTemplates, t);\n    this.importTemplates.splice(ix, 1);\n  }\n  \n  sampleData : any= {\n'csv-qa':\n`What is the eighth planet form the sun?,Neptune\nWhat are the rocky planets in our solar system?, Mercury,, Venus,, Earth,, Mars`,\n\n'csv-table':\n`Planet,Distance from the sun (AU),Period of revolution,Period of rotation,Mass (earth = 1),Diameter (earth = 1),Number of satellites\nMercury,0.39,88 days,59 days,0.06,0.38,0\nVenus,0.72,225 days,243 days,0.82,0.95,0\nEarth,1,365 days,24 hours,1,1,1\nMars,1.52,687 days,25 hours,0.11,0.53,2\nJupiter,5.2,12 years,10 hours,317.89,11.19,63\nSaturn,9.54,29 years,10 hours,95.15,9.44,61\nUranus,19.2,84 years,18 hours,14.54,4.1,27\nNeptune,30.06,165 years,18 hours,17.23,3.88,14` ,\n\n'csv-table-templates' :\n  [\n    {q: 'What is the period of revolution of {Planet}?', a:'{Period of Revolution}', filter:'', group : '', multi : ''},\n    {q: 'How far is {Planet} from the sun', a:'{Distance from the sun (AU)}', filter:'', group : '', multi : '2'}\n  ],\n\n'json-qa':\n`[\n { \n  \"question\" : \"What is the eighth planet from the sun? \",\n  \"answer\" : \"Neptune\"\n },\n { \n  \"question\" : \"What are the rocky planets in our solar system?\",\n  \"answer\" : \"Mercury, Venus, Earth, Mars\"\n }\n]`,\n\n'json-table':\n`[\n{\n  \"Conf-Div\": \"AFC East\",\n  \"Team\": \"Buffalo Bills\",\n  \"Location\": \"Orchard Park,NY\",\n  \"Coach\": \"Rex Ryan\"\n },\n {\n  \"Conf-Div\": \"AFC East\",\n  \"Team\": \"Miami Dolphins\",\n  \"Location\": \"Miami Gardens, FL\",\n  \"Coach\": \"Adam Gase\"\n },\n {\n  \"Conf-Div\": \"AFC East\",\n  \"Team\": \"New England Patriots\",\n  \"Location\": \"Foxborough,MA\",\n  \"Coach\": \"Bill Belichick\"\n },\n {\n  \"Conf-Div\": \"AFC East\",\n  \"Team\": \"New York Jets\",\n  \"Location\": \"East Rutherford, NJ\",\n  \"Coach\": \"Todd Bowles\"\n },\n {\n  \"Conf-Div\": \"AFC North\",\n  \"Team\": \"Baltimore Ravens\",\n  \"Location\": \"Baltimore, MD\",\n  \"Coach\": \"John Harbaugh\"\n },\n {\n  \"Conf-Div\": \"AFC North\",\n  \"Team\": \"Cincinnati Bengals\",\n  \"Location\": \"Cincinnati, OH\",\n  \"Coach\": \"Marvin Lewis\"\n }\n]`,\n'json-table-templates' : [\n   { q:'What conference and division is {Team} in?', a: '{Conf-Div}', filter:'', group:'', multi:'' },\n   { q:'Which teams are in {Conf-Div}?', a: '{Team}', filter:'', group:'{Conf-Div}', multi:'' }]\n};\n\n\n doFootBallData() {\n   this.importText = this.footballData.json;\n   this.importTemplates = this.footballData.templates;\n   this.parseData();\n }\n\n footballData: any = {\n   json : `[\n {\n  \"Conf-Div\": \"AFC East\",\n  \"Team\": \"Buffalo Bills\",\n  \"Location\": \"Orchard Park,NY\",\n  \"Coach\": \"Rex Ryan\"\n },\n {\n  \"Conf-Div\": \"AFC East\",\n  \"Team\": \"Miami Dolphins\",\n  \"Location\": \"Miami Gardens, FL\",\n  \"Coach\": \"Adam Gase\"\n },\n {\n  \"Conf-Div\": \"AFC East\",\n  \"Team\": \"New England Patriots\",\n  \"Location\": \"Foxborough,MA\",\n  \"Coach\": \"Bill Belichick\"\n },\n {\n  \"Conf-Div\": \"AFC East\",\n  \"Team\": \"New York Jets\",\n  \"Location\": \"East Rutherford, NJ\",\n  \"Coach\": \"Todd Bowles\"\n },\n {\n  \"Conf-Div\": \"AFC North\",\n  \"Team\": \"Baltimore Ravens\",\n  \"Location\": \"Baltimore, MD\",\n  \"Coach\": \"John Harbaugh\"\n },\n {\n  \"Conf-Div\": \"AFC North\",\n  \"Team\": \"Cincinnati Bengals\",\n  \"Location\": \"Cincinnati, OH\",\n  \"Coach\": \"Marvin Lewis\"\n },\n {\n  \"Conf-Div\": \"AFC North\",\n  \"Team\": \"Cleveland Browns\",\n  \"Location\": \"Cleveland, OH\",\n  \"Coach\": \"Hue Jackson\"\n },\n {\n  \"Conf-Div\": \"AFC North\",\n  \"Team\": \"Pittsburgh Steelers\",\n  \"Location\": \"Pittsburgh, PA\",\n  \"Coach\": \"Mike Tomlin\"\n },\n {\n  \"Conf-Div\": \"AFC South\",\n  \"Team\": \"Houston Texans\",\n  \"Location\": \"Houston, TX\",\n  \"Coach\": \"Bill O'Brien\"\n },\n {\n  \"Conf-Div\": \"AFC South\",\n  \"Team\": \"Indianapolis Colts\",\n  \"Location\": \"Indianapolis,IN\",\n  \"Coach\": \"Chuck Pagano\"\n },\n {\n  \"Conf-Div\": \"AFC South\",\n  \"Team\": \"Jacksonville Jaguars\",\n  \"Location\": \"Jacksonville,FL\",\n  \"Coach\": \"Gus Bradley\"\n },\n {\n  \"Conf-Div\": \"AFC South\",\n  \"Team\": \"Tennessee Titans\",\n  \"Location\": \"Nashville, TN\",\n  \"Coach\": \"Mike Mularkey\"\n },\n {\n  \"Conf-Div\": \"AFC West\",\n  \"Team\": \"Denver Broncos\",\n  \"Location\": \"Denver, CO\",\n  \"Coach\": \"Gary Kubiak\"\n },\n {\n  \"Conf-Div\": \"AFC West\",\n  \"Team\": \"Kansas City Chiefs\",\n  \"Location\": \"Kansas City,MO\",\n  \"Coach\": \"Andy Reid\"\n },\n {\n  \"Conf-Div\": \"AFC West\",\n  \"Team\": \"Oakland Raiders\",\n  \"Location\": \"Oakland, CA\",\n  \"Coach\": \"Jack Del Rio\"\n },\n {\n  \"Conf-Div\": \"AFC West\",\n  \"Team\": \"San Diego Chargers\",\n  \"Location\": \"San Diego, CA\",\n  \"Coach\": \"Mike McCoy\"\n },\n {\n  \"Conf-Div\": \"NFC East\",\n  \"Team\": \"Dallas Cowboys\",\n  \"Location\": \"Arlington, TX\",\n  \"Coach\": \"Jason Garrett\"\n },\n {\n  \"Conf-Div\": \"NFC East\",\n  \"Team\": \"New York Giants\",\n  \"Location\": \"East Rutherford, NJ\",\n  \"Coach\": \"Ben McAdoo\"\n },\n {\n  \"Conf-Div\": \"NFC East\",\n  \"Team\": \"Philadelphia Eagles\",\n  \"Location\": \"Philadelphia,PA\",\n  \"Coach\": \"Doug Pederson\"\n },\n {\n  \"Conf-Div\": \"NFC East\",\n  \"Team\": \"Washington Redskins\",\n  \"Location\": \"Landover, MD\",\n  \"Coach\": \"Jay Gruden\"\n },\n {\n  \"Conf-Div\": \"NFC North\",\n  \"Team\": \"Chicago Bears\",\n  \"Location\": \"Chicago, IL\",\n  \"Coach\": \"John Fox\"\n },\n {\n  \"Conf-Div\": \"NFC North\",\n  \"Team\": \"Detroit Lions\",\n  \"Location\": \"Detroit, MI\",\n  \"Coach\": \"Jim Caldwell\"\n },\n {\n  \"Conf-Div\": \"NFC North\",\n  \"Team\": \"Green Bay Packers\",\n  \"Location\": \"Green Bay, WI\",\n  \"Coach\": \"Mike McCarthy\"\n },\n {\n  \"Conf-Div\": \"NFC North\",\n  \"Team\": \"Minnesota Vikings\",\n  \"Location\": \"Minneapolis,MN\",\n  \"Coach\": \"Mike Zimmer\"\n },\n {\n  \"Conf-Div\": \"NFC South\",\n  \"Team\": \"Atlanta Falcons\",\n  \"Location\": \"Atlanta, GA\",\n  \"Coach\": \"Dan Quinn\"\n },\n {\n  \"Conf-Div\": \"NFC South\",\n  \"Team\": \"Carolina Panthers\",\n  \"Location\": \"Charlotte, NC\",\n  \"Coach\": \"Ron Rivera\"\n },\n {\n  \"Conf-Div\": \"NFC South\",\n  \"Team\": \"New Orleans Saints\",\n  \"Location\": \"New Orleans,LA\",\n  \"Coach\": \"Sean Payton\"\n },\n {\n  \"Conf-Div\": \"NFC South\",\n  \"Team\": \"Tampa Bay Buccaneers\",\n  \"Location\": \"Tampa, FL\",\n  \"Coach\": \"Dirk Koetter\"\n },\n {\n  \"Conf-Div\": \"NFC West\",\n  \"Team\": \"Arizona Cardinals\",\n  \"Location\": \"Glendale, AZ\",\n  \"Coach\": \"Bruce Arians\"\n },\n {\n  \"Conf-Div\": \"NFC West\",\n  \"Team\": \"Los Angeles Rams\",\n  \"Location\": \"Los Angeles,CA\",\n  \"Coach\": \"Jeff Fisher\"\n },\n {\n  \"Conf-Div\": \"NFC West\",\n  \"Team\": \"San Francisco 49ers\",\n  \"Location\": \"Santa Clara,CA\",\n  \"Coach\": \"Chip Kelly\"\n },\n {\n  \"Conf-Div\": \"NFC West\",\n  \"Team\": \"Seattle Seahawks\",\n  \"Location\": \"Seattle, WA\",\n  \"Coach\": \"Pete Carroll\"\n }\n]`,\n\n templates : \n [\n  { q:'What conference and division is {Team} in?', a: '{Conf-Div}', filter:'', group:'', multi:'' },\n  { q:'Which teams are in {Conf-Div}?', a: '{Team}', filter:'', group:'', multi:'' }\n ]\n\n };\n\n\n createCards(){\n   let rows = this.parsedData;\n   let templates = this.importTemplates;\n\n   if ( this.importContent == 'qa' ){\n     //create questions from q/a parsed data\n     let props = _.keys( rows[0] );\n     for( let row of rows){\n       this.cards.push( new Card(null, row[props[0]], row[props[1]]));\n     }       \n\n   }else{\n\n     let engine = new QuestionFormulatingEngine(); //, QandA, Result, UIResult, UIMessage\n     \n     for( let t of templates ){\n       let res = engine.CreateCards( rows, t, t);\n\n       if ( true ){\n         let resQandA = <Array<QandA>>res.content;\n         for(let qa of resQandA){\n           this.cards.push( new Card(null, qa.Q, qa.A));\n         }\n       }\n      }\n     //create questions using question formulator engine\n\n\n   }\n }\n\n clearCards(){\n   this.cards = [];\n }\n\n saveCards(){\n   this.deck.addCards( this.cards );\n   this.clearForm();\n   console.log('Cards Added to Deck');\n }\n\n clearForm(){\n   this.cards = [];\n   this.importTemplates = [];\n   this.importText = \"\";\n\n }\n\n /*** get sample datr out? into own files? hmmm */\n}","\nimport {inject} from 'aurelia-framework';\nimport { Card, Deck, State, DeckHeader } from './../objects/allobjects'\nimport {Router} from 'aurelia-router';\nimport {DeckStoreAPI} from './../storage/deck-store-api';\n\n@inject(State, Router, DeckStoreAPI)\nexport class Index {\n  \n  /*** search : decks result set */\n  decks : DeckHeader[];\n  /*** search : search text  */  \n  searchText : string;\n  searchLocation : string;\n  \n  constructor(private state: State, private router: Router, private store: DeckStoreAPI) {  \n  }\n\n  activate(){\n    return this.search();\n  }\n\n  search() : Promise<DeckHeader>{\n\n    let searchText = this.searchText;\n\n    let _searchLocation = this._getSearchLocation();\n    if ( _searchLocation === 'local'){\n      return this.store.searchLocal( searchText )\n          .then( res => { \n            this.decks = res;\n          });\n    }\n    if ( _searchLocation === 'remote'){\n      return this.store.search( searchText )\n          .then( res => { this.decks = res; });\n    }\n\n  }\n\n  _getSearchLocation() : string{\n    return this.searchLocation == 'remote' ? 'remote' : 'local';\n  }\n\n  /*** go => direct to play game */\n  goToPlay( deckNum ){\n\n    this.getDeck( deckNum ).then(\n      deck => {\n          this.state.deck = deck;\n          this.router.navigateToRoute(\"play\",{id:\"1\"});\n      });\n  }\n\n  /*** go => direct to edit screen */\n  goToEdit( deckNum ){\n    this.getDeck( deckNum )\n        .then(\n      deck => {\n          this.state.deck = deck;\n          this.router.navigateToRoute(\"edit\");\n      });\n  }\n\n  getDeck ( deckNum : string ) : Promise<Deck>{\n\n    let promise = null;\n\n    let _searchLocation = this._getSearchLocation();\n    \n    if ( _searchLocation === 'local'){\n      promise = this.store.getLocalDeck( deckNum )\n    }\n    \n    if ( _searchLocation === 'remote'){\n      promise = this.store.getDeck( deckNum )\n    }\n\n    return promise;\n  }\n\n  deleteDeck( deckNum ){\n    this.store.deleteDeck( deckNum )\n      .then( () => this.search() );\n  }\n\n  goToNew(){\n    //create new deck\n    //load empty deck\n    //navigate to deck\n    this.state.deck = Deck.Create();\n    this.router.navigateToRoute(\"edit\");\n  }\n}\n","import { Card, Deck, State, DeckFactory, CardResponse } from './../objects/allobjects'\nimport { Router } from 'aurelia-router';\nimport { inject } from 'aurelia-framework';\nimport { DeckStoreAPI } from './../storage/deck-store-api';\n@inject( Router, State, DeckStoreAPI)\nexport class App {\n  message = 'Professional Football Trivia';\n  deck : Deck;\n  card : Card;\n  showAnswer : Boolean;\n  showCommands : Boolean;\n  isInTransition : Boolean;\n\n  constructor( private router : Router, private state : State , private store : DeckStoreAPI) {       \n      \n      if ( state.deck == null){\n        this.router.navigateToRoute('decks');\n      }\n\n      this.deck = state.deck;      \n      this.showCommands = false;\n      this.isInTransition = true;        \n  }\n\n  \n  activate(params) {\n\n      var id = 1;\n      if ( params.id != null )\n        id = params.id;\n\n      this.state.cardNumber = id;\n      this.card = this.deck.cards[id - 1];\n\n      this.isInTransition = false;        \n  }\n\n  attached(){\n    this.myKeypressCallback = this.keypressInput.bind(this); \n    window.addEventListener('keydown', this.myKeypressCallback, false);\n  }\n  detached(){\n    window.removeEventListener('keydown', this.myKeypressCallback);\n\n  }\n\n  myKeypressCallback( e ){ } //placeholder function  \n  keypressInput(e) {  // This function is called by the aliased method\n \n      //console.log(e);\n      //if game not started ignore\n      // if ( false )\n      //   return;\n\n      \n      var letter = e.key.toLowerCase();\n      switch( letter ){\n\n        case 'f':\n          this.flag(null);\n          break;\n        case 'y':\n          this.right();\n          break;\n        case 'n':\n          this.wrong();\n          break;\n\n        case 'p':\n          this.pass();\n          break;\n\n        case 's':\n          this.toggleAnswer();\n          break;\n\n        case ' ':\n          this.toggleAnswer(true);\n          break;\n\n        case 'arrowleft' :\n          this.previous();\n          break;\n        case 'arrowright':\n          this.next();\n          break;\n\n        case 'h':\n          this.toggleCommands();\n          break;\n\n        case 'r':\n          this.goToReview()\n      }\n  }\n \n  toggleCommands(){\n    this.showCommands = !this.showCommands;\n  }\n\n  handleSwipe(e){\n    console.log('swipe');\n    console.log (e );\n    //case ($event.direction)\n\n  }\n\n  handleTap(e){\n\n    if ( e.hammerEvent.target.id != 'cardEl' && \n         e.hammerEvent.target.id != 'answer')\n      return;\n\n \n    console.log('tap');\n    console.log(e);\n    this.toggleAnswer();\n  }\n\n  flag(e){\n     this.card.isFlagged = !this.card.isFlagged;\n  }\n\n\n  right(){\n     this.respond( CardResponse.Right );\n  }\n\n  wrong(){\n     this.respond( CardResponse.Wrong );\n  }\n\n  pass(){\n     this.respond( CardResponse.Pass );\n  }\n  \n  respond( response : CardResponse ){\n\n    if ( this.isInTransition )\n        return;\n\n     this.card.mark( response );\n\n     //animate response using class\n     //wait a bit?\n   \n     this.isInTransition = true;\n     //fade card ( opacity )\n     window.setTimeout( x => this.next(), 200 );\n     //go to next\n  }\n\n  previous(){\n     this.card = this.deck.previous();\n     this.router.navigateToRoute(\"play\", { id : this.card.number});\n  }\n\n  next(){\n     var next = this.deck.next();\n\n     if ( this.card != next){\n          this.card = next;\n          this.router.navigateToRoute(\"play\", { id : this.card.number});\n      }else{        \n        //do something to indicate card didnt change\n\n      }\n\n      this.isInTransition = false;\n  }\n\n\n  //reset card display\n  reset (){\n    this.unreveal();\n  }\n\n  //can encapsulate into card \n  // card.showAnswer\n  // card.hideAnswer\n  // card.resetCounters()\n  // card.resetVisuals()?\n  toggleAnswer( forceShow : boolean = false){\n      this.card.isAnswerVisible = forceShow || !this.card.isAnswerVisible ;\n  }\n\n  reveal(){\n      this.card.isAnswerVisible = true;\n  }\n\n  unreveal(){\n      this.card.isAnswerVisible = false;\n  }\n\n\n  clearAnswers(){\n     for( let _card of this.deck.cards ){\n       _card.response = CardResponse.Undefined;\n       _card.isAnswerVisible = false;\n     }\n  }\n\n  clearAnswersHistory(){\n     this.clearAnswers();\n     for( let _card of this.deck.cards ){\n       _card.rightCount = 0;\n       _card.wrongCount = 0;\n       _card.skipCount = 0;\n     }    \n  }\n\n  // game control\n  goToReview(){\n    this.router.navigateToRoute('review');  \n  }\n\n  goToIndex(){\n    this.router.navigateToRoute('decks')\n  }\n\n  saveGame(){\n    this.store\n        .saveDeck( this.deck )\n        .then( () => alert(\"Game Saved!\") );\n  }\n\n}\n","import { Deck, State } from './../objects/allobjects'\r\nimport { inject } from 'aurelia-framework'\r\nimport { Router } from 'aurelia-router'\r\n\r\n@inject( State, Router )\r\nexport class Review{\r\n    questionCount : number;\r\n    correctAtLeastOnceCount : number;\r\n    neverCorrectCount :number;\r\n    noJudgementCount : number;\r\n    deck :Deck;\r\n\r\n    constructor( private state : State, private router : Router ){\r\n\r\n        if ( this.state.deck === undefined ){\r\n            this.goToGame();\r\n        }else{\r\n            this.deck = this.state.deck;\r\n        }\r\n    }\r\n\r\n    goToGame(){\r\n        this.router.navigateToRoute('play', {id:'1'});\r\n    }\r\n\r\n    activate(){\r\n        this.computeThings();\r\n    }\r\n\r\n    computeThings(){\r\n        \r\n        var cards = this.state.deck.cards;\r\n\r\n        this.questionCount  = cards.length;\r\n        this.correctAtLeastOnceCount = 0;\r\n        this.neverCorrectCount = 0;\r\n        this.noJudgementCount = 0;\r\n        \r\n        for(let i = 0; i < cards.length; i++ ){\r\n\r\n            var card = cards[i];\r\n\r\n            if ( card.rightCount > 0 )\r\n                this.correctAtLeastOnceCount++;\r\n            else\r\n                if ( card.wrongCount > 0)\r\n                    this.neverCorrectCount++;\r\n                else\r\n                    if ( card.skipCount > 0 )\r\n                        this.noJudgementCount++;\r\n                        \r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n // use base class to add keybindings, override kepress thing\r\n attached(){\r\n    this.myKeypressCallback = this.keypressInput.bind(this); \r\n    window.addEventListener('keydown', this.myKeypressCallback, false);\r\n  }\r\n  detached(){\r\n    window.removeEventListener('keydown', this.myKeypressCallback);\r\n\r\n  }\r\n\r\n  myKeypressCallback( e ){ } //placeholder function  \r\n  keypressInput(e) {  // This function is called by the aliased method\r\n    var letter = e.key.toLowerCase();\r\n    \r\n    switch( letter ){\r\n        case 'arrowleft':\r\n        case 'backspace':\r\n            this.goToGame();\r\n            break;\r\n    }\r\n\r\n  }\r\n}\r\n\r\n\r\n","import * as _ from 'underscore';\r\n\r\n/*** created to validate and parse json tables  */\r\nexport class JSONTableParser{\r\n    \r\n    // method : validate\r\n    // method : parse\r\n    \r\n    data : any[];\r\n    schema : string[];\r\n\r\n    /*** truw when able to parse text input into consistient json data */\r\n    success : boolean = false;\r\n    \r\n    /*** error message */\r\n    message: string = null;\r\n\r\n    constructor( public text : string ){\r\n\r\n        try{\r\n            this.data = JSON.parse( text );\r\n        }\r\n        catch(e ){\r\n            this.message = \"Unable to parse JSON. Invalid format\";\r\n        }\r\n\r\n        if (!Array.isArray( this.data ) || this.data.length < 1){\r\n            this.message = \"The JSON must be an array of objects.\";\r\n            return;\r\n        }\r\n\r\n        //check that all properties are the same in each object\r\n        let obj_0 = this.data[0];\r\n        let schema_props = _.allKeys( obj_0 );\r\n\r\n        let i = 0;\r\n        /* validate each array has the same props */\r\n        for( let row of this.data){              \r\n            if (! _.isEqual( schema_props, _.allKeys( row )) ){\r\n                this.message = `The rows at indecies 0 and ${i} have different schemas. All rows must have the same schema`;\r\n                return;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        this.success = true;\r\n    }\r\n\r\n    IsSuccess(): boolean{\r\n        return this.success;\r\n    }\r\n\r\n    /***  if the javascript table was valid and parseable returns null,\r\n     *    otherwise returns an error message */\r\n    Message() : string{\r\n        return this.message;\r\n    }\r\n\r\n    GetData() : any[]{\r\n        return this.data;\r\n    }\r\n\r\n    GetJSONSchema() : Array<string>{\r\n        return this.schema;\r\n    }\r\n}","import * as _ from 'underscore';\r\n\r\n/*** created to validate and parse question templates  */\r\nexport class JSONTemplateParser{\r\n    \r\n    data : any[];\r\n    schema : string[];\r\n\r\n    /*** true when able to parse text input into consistient json data */\r\n    success : boolean = false;\r\n    \r\n    /*** error message */\r\n    message: string = null;\r\n\r\n    constructor( public text : string ){\r\n\r\n        try{\r\n            this.data = JSON.parse( text );\r\n        }\r\n        catch(e ){\r\n            this.message = \"Unable to parse JSON. Invalid format\";\r\n        }\r\n\r\n        if (!Array.isArray( this.data ) || this.data.length < 1){\r\n            this.message = \"The JSON must be an array of objects.\";\r\n            return;\r\n        }\r\n\r\n        //check that all properties are the same in each object\r\n        let obj_0 = this.data[0];\r\n        let schema_props = _.allKeys( obj_0 );\r\n\r\n        let i = 0;\r\n        /* validate each array has the same props */\r\n        for( let row of this.data){              \r\n            if (! _.isEqual( schema_props, _.allKeys( row )) ){\r\n                this.message = `The rows at indecies 0 and ${i} have different schemas. All rows must have the same schema`;\r\n                return;\r\n            }\r\n            i++;\r\n        }\r\n\r\n        this.success = true;\r\n    }\r\n\r\n    IsSuccess(): boolean{\r\n        return this.success;\r\n    }\r\n\r\n    /***  if the javascript table was valid and parseable returns null,\r\n     *    otherwise returns an error message */\r\n    Message() : string{\r\n        return this.message;\r\n    }\r\n\r\n    GetData() : any[]{\r\n        return this.data;\r\n    }\r\n\r\n    GetJSONSchema() : Array<string>{\r\n        return this.schema;\r\n    }\r\n}","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  config.globalResources([ './value-converters/number']);\n}\n","export class DecimalNumberValueConverter {\n toView(value, format) {\n    if (!value && value !== 0)\n      return null;\n    return Number(value).toFixed(format);\n  }\n\n}\n\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"\r\n/* fade in/out transition */\r\n.fade{\r\n    transition: opacity ease-in-out .1s;\r\n\r\n    &-out{\r\n    opacity: .5;\r\n    }\r\n\r\n    &-in{\r\n        opacity: 1;\r\n    }\r\n}\r\n\r\n\r\n/* all purpose */\r\n.is-toggle{\r\n    cursor:pointer;\r\n}\r\n\r\n\r\n\r\n\r\n",null,"\r\n/* fade in/out transition */\r\n.fade{\r\n    transition: opacity ease-in-out .1s;\r\n\r\n    &-out{\r\n    opacity: .5;\r\n    }\r\n\r\n    &-in{\r\n        opacity: 1;\r\n    }\r\n}\r\n\r\n\r\n/* all purpose */\r\n.is-toggle{\r\n    cursor:pointer;\r\n}\r\n\r\n\r\n\r\n\r\n","\n\n/* table widths */\n// .edit-table{\n   \n//     @media screen and ( min-width:769px )\n//     {\n\n//         $style-one:( width:5%, verical-align:top, padding-top:2em );\n//         $style-two:( width:45% );\n\n//         @include table-column-styles(\n//             true,\n//             $style-one,\n//             $style-two,\n//             $style-two,\n//             $style-one\n//         );\n\n//     };\n// }\n\n","@charset 'utf-8';\r\n\r\n\r\n@import 'style/all';\r\n\r\n\r\n@import './deck/deck.scss';\r\n\r\n\r\n/* materialize add-on styles */\r\n\r\n.card.tiny{    \r\n    position: relative;\r\n    height:185px;\r\n}\r\n\r\n.card.tiny .card-content{\r\n    max-height: 100%;\r\n    overflow: hidden;\r\n}\r\n\r\n.card.tiny .card-action{\r\n    position: absolute;\r\n    bottom: 0;\r\n    left: 0;\r\n    right: 0;\r\n}\r\n\r\n@media screen and ( max-width:600px ){\r\n    .card.tiny{\r\n        box-shadow: none;\r\n        border-top:1px solid grey;\r\n        border-left:none;\r\n        border-right:none;\r\n        border-radius: 0;\r\n        margin:0;\r\n    }\r\n\r\n    .card.tiny .card-action{\r\n        padding:10px 20px;\r\n    }\r\n}\r\n\r\n#MainContainer{\r\n\r\n    // @media screen and ( max-width:600px ){\r\n    //     width:100%;       \r\n    //     overflow:hidden;\r\n    // }\r\n    \r\n}\r\n\r\n/*\r\nClass : .sm-full\r\nCreated to : negate the padding and margin of the container and column on small screens\r\nSets direct row decendants of a container to full width\r\n*/\r\n@media screen and ( max-width:600px ){\r\n\r\n    .container .row.sm-full {\r\n        margin-left:0;\r\n        margin-right:0;\r\n        margin:0 -5%;\r\n    }\r\n\r\n    .container .row.sm-full > .col.s12{\r\n            padding-left:0;\r\n            padding-right:0;        \r\n    }\r\n}",null,null,"\n body{\n    font-family: Arial, Helvetica, sans-serif;\n }\n\n\n #game-container{\n     text-align: left;\n     max-width:550px;\n     position:relative;\n }\n\n #cardEl {   \n   margin-right:0;\n   padding:1em;\n   font-size:16px;\n   border-radius:2px;\n   text-align: left;\n   overflow:hidden;\n   padding-bottom:1.5em;\n }\n\n #flag{\n     position:absolute;\n     top:0;\n     right:0;\n     background: none;\n     z-index: 1;\n     margin:0;\n     padding : .2em;\n }\n\n #flag.active{\n     /*color:orangered;*/\n     color: hotpink;\n }\n\n /*#flag.active code{\n     color:orangered;      \n }*/\n\n #flag span{\n     line-height: 22px;\n     font-size:22px;\n }\n #flag code {\n     line-height: 25px;\n     vertical-align: top;\n }\n\n #number{\n     padding:0px 5px;\n     margin-top:-5px;\n     position:absolute;\n     right: 0;\n     opacity: .5;\n }\n\n #card-actions button.active{\n     border:1px solid hotpink; \n }\n\n .tap-action{\n    font-size: 20px;\n    font-weight: bold;\n    opacity: .1;\n }\n\n help{\n    margin-left:2px;\n    font-size: 14px;\n }\n button code{\n     color:darkcyan;\n     font-size:14px;\n }\n\n #MoreButtons{\n   width:100%;\n   padding:.3em;\n   display: inline-flex;\n   flex-direction: column;\n   align-items: baseline;\n }\n\n /* small screen logic */\n @media screen and (max-width:600px){\n\n     #game-container{\n        text-align: center;\n     }\n\n     #scoreboard{\n         flex-direction: column;\n         align-items: center;  \n         margin:0 auto;\n     }\n\n     #scoreboard > *{\n        width:100%;\n        margin:.2em .3em;\n     }\n\n     #prev-next{\n         display:inline-flex;        \n     }\n\n    #MoreButtons{\n        align-items:stretch;\n    }\n\n    #prev-next button{\n        margin:.2em;\n        flex: 1;\n     }\n     #prev-next button:first-of-type{ margin-left:0; }\n     #prev-next button:last-of-type{ margin-right:0; }\n\n     #card-actions button{\n         padding:0 .8em;\n     }\n }\n\n\n\n#commands-table table{\n    font-size:12px;    \n    margin:1em;\n    width:calc(100% - 2em);\n    max-width:800px;\n}\n\n#commands-table td:nth-of-type(1){\n    font-weight: bold;\n}\n\n#commands-table td:nth-of-type(2){\n    font-family: monospace;    \n}\n\n#commands-table{\n    top:0; bottom:0; left:0; right:0; opacity:.95; background-color:white; position:absolute; z-index:2;\n}\n\n @media screen and (max-width:600px){\n     #commands-table th:nth-of-type(2),\n     #commands-table th:nth-of-type(3),\n     #commands-table td:nth-of-type(2),\n     #commands-table td:nth-of-type(3){\n         display: none;\n     }\n }",null,"#review-table{\n    font-size:14px;    \n    margin:1em;\n    width:calc(100% - 2em);\n    max-width:800px;\n}\n\n\n#review-table th, #review-table td{\n    margin:.2em;\n    padding-top:1em;\n    padding-right: .2em;\n    padding-bottom:1em;\n    border-bottom: 1px solid gainsboro;\n}\n\n#review-table .answer {\n    margin-top:.5em;\n    padding-left: 3em;\n}\n\n\n.cb-pads{\n    padding:1rem 2rem;\n}\n\n@media screen and (max-width:650px){\n    th:nth-of-type(3),\n    td:nth-of-type(3){\n        display:none;\n    }\n}","\n\n\n/* edit page */\ninput{\n    border:none;\n    border-bottom:1px solid green;\n}\n\n.deck-edit{\n    width: 100%;\n    max-width:700px;\n}\n\n.deck-edit header input{\n    font-size: 1.2em;\n    max-width: 400px;\n    width: 100%;\n}\n\n.deck-edit description input{\n    font-size:1.1em;\n    max-width:600px;\n    width: 100%;\n}\n\n/* input should by styled somewhere okay? */\n\n.add-table textarea{\n    width:95%;\n}\n\n.edit-table textarea{\n    width:95%;\n    border:none;\n}\n\n.align-top td{\n    vertical-align: top;\n}\n\ntextarea.txa-no-padding{\n    padding-top:0;\n    margin-bottom:0;\n}\n\n@media screen and (max-width:600px){\n    \n    .small-responseive-no-head thead{\n        display:none;\n    }\n\n    .small-responsive-no-head tr{\n        display: flex;\n        flex-direction:column;\n    }\n\n    td:last-child{\n        padding-top:0;\n        text-align:right;\n        margin-bottom:2em;\n    }\n\n}\n",null,null],"sourceRoot":"..\\src"}